
basicTemp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000016c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000152  00800060  000016c0  00001754  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  008001b2  008001b2  000018a6  2**0
                  ALLOC
  3 .debug_aranges 000001c0  00000000  00000000  000018a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000003aa  00000000  00000000  00001a66  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002973  00000000  00000000  00001e10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000013d6  00000000  00000000  00004783  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001885  00000000  00000000  00005b59  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000320  00000000  00000000  000073e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f3  00000000  00000000  00007700  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a2e  00000000  00000000  00007bf3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001b8  00000000  00000000  00008621  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 af 02 	jmp	0x55e	; 0x55e <__vector_10>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 61 01 	jmp	0x2c2	; 0x2c2 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 ec       	ldi	r30, 0xC0	; 192
      68:	f6 e1       	ldi	r31, 0x16	; 22
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3b       	cpi	r26, 0xB2	; 178
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a2 eb       	ldi	r26, 0xB2	; 178
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ad 3b       	cpi	r26, 0xBD	; 189
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 00 	call	0x92	; 0x92 <main>
      8a:	0c 94 5e 0b 	jmp	0x16bc	; 0x16bc <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include <avr/interrupt.h>

FILE lcd_stream = FDEV_SETUP_STREAM(lcd_char, NULL, _FDEV_SETUP_WRITE);

int main(void)
{
      92:	8f 92       	push	r8
      94:	9f 92       	push	r9
      96:	af 92       	push	r10
      98:	bf 92       	push	r11
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29

 uint8_t tempurature = 0;
 uint8_t maxtemp =0;
 uint8_t heartmon = 0;
 timer = 0;
      aa:	10 92 b5 01 	sts	0x01B5, r1
 adc_done = 0;
      ae:	10 92 b6 01 	sts	0x01B6, r1
 analog = 0;
      b2:	10 92 b4 01 	sts	0x01B4, r1
      b6:	10 92 b3 01 	sts	0x01B3, r1

 //Initalization
 adc_init();
      ba:	0e 94 4c 01 	call	0x298	; 0x298 <adc_init>
 lcd_init();
      be:	0e 94 87 02 	call	0x50e	; 0x50e <lcd_init>
 timer_init();
      c2:	0e 94 a7 02 	call	0x54e	; 0x54e <timer_init>


 //setup printf
 stdout = &lcd_stream;
      c6:	84 e8       	ldi	r24, 0x84	; 132
      c8:	90 e0       	ldi	r25, 0x00	; 0
      ca:	90 93 ba 01 	sts	0x01BA, r25
      ce:	80 93 b9 01 	sts	0x01B9, r24

 //sets portb data direction register
 DDRB = 0xFF;
      d2:	8f ef       	ldi	r24, 0xFF	; 255
      d4:	87 bb       	out	0x17, r24	; 23

 //
 lcd_clear();
      d6:	0e 94 cb 01 	call	0x396	; 0x396 <lcd_clear>
 lcd_gotoxy(0,7);
      da:	80 e0       	ldi	r24, 0x00	; 0
      dc:	67 e0       	ldi	r22, 0x07	; 7
      de:	0e 94 a9 01 	call	0x352	; 0x352 <lcd_gotoxy>
 lcd_custom(1);
      e2:	81 e0       	ldi	r24, 0x01	; 1
      e4:	0e 94 16 02 	call	0x42c	; 0x42c <lcd_custom>
      e8:	84 ec       	ldi	r24, 0xC4	; 196
      ea:	99 e0       	ldi	r25, 0x09	; 9
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      ec:	20 e9       	ldi	r18, 0x90	; 144
      ee:	31 e0       	ldi	r19, 0x01	; 1
      f0:	f9 01       	movw	r30, r18
      f2:	31 97       	sbiw	r30, 0x01	; 1
      f4:	f1 f7       	brne	.-4      	; 0xf2 <main+0x60>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
      f6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
      f8:	d9 f7       	brne	.-10     	; 0xf0 <main+0x5e>
 _delay_ms(250);
 lcd_clear();
      fa:	0e 94 cb 01 	call	0x396	; 0x396 <lcd_clear>
      fe:	84 ec       	ldi	r24, 0xC4	; 196
     100:	99 e0       	ldi	r25, 0x09	; 9
     102:	20 e9       	ldi	r18, 0x90	; 144
     104:	31 e0       	ldi	r19, 0x01	; 1
     106:	f9 01       	movw	r30, r18
     108:	31 97       	sbiw	r30, 0x01	; 1
     10a:	f1 f7       	brne	.-4      	; 0x108 <main+0x76>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     10c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     10e:	d9 f7       	brne	.-10     	; 0x106 <main+0x74>
 _delay_ms(250);
 lcd_clear();
     110:	0e 94 cb 01 	call	0x396	; 0x396 <lcd_clear>
 lcd_gotoxy(0,7);
     114:	80 e0       	ldi	r24, 0x00	; 0
     116:	67 e0       	ldi	r22, 0x07	; 7
     118:	0e 94 a9 01 	call	0x352	; 0x352 <lcd_gotoxy>
 lcd_custom(1);
     11c:	81 e0       	ldi	r24, 0x01	; 1
     11e:	0e 94 16 02 	call	0x42c	; 0x42c <lcd_custom>
     122:	84 ec       	ldi	r24, 0xC4	; 196
     124:	99 e0       	ldi	r25, 0x09	; 9
     126:	20 e9       	ldi	r18, 0x90	; 144
     128:	31 e0       	ldi	r19, 0x01	; 1
     12a:	f9 01       	movw	r30, r18
     12c:	31 97       	sbiw	r30, 0x01	; 1
     12e:	f1 f7       	brne	.-4      	; 0x12c <main+0x9a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     130:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     132:	d9 f7       	brne	.-10     	; 0x12a <main+0x98>
 _delay_ms(250);
 lcd_clear();
     134:	0e 94 cb 01 	call	0x396	; 0x396 <lcd_clear>
     138:	84 ec       	ldi	r24, 0xC4	; 196
     13a:	99 e0       	ldi	r25, 0x09	; 9
     13c:	20 e9       	ldi	r18, 0x90	; 144
     13e:	31 e0       	ldi	r19, 0x01	; 1
     140:	f9 01       	movw	r30, r18
     142:	31 97       	sbiw	r30, 0x01	; 1
     144:	f1 f7       	brne	.-4      	; 0x142 <main+0xb0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     146:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     148:	d9 f7       	brne	.-10     	; 0x140 <main+0xae>
 _delay_ms(250);

 sei();
     14a:	78 94       	sei
     14c:	10 e0       	ldi	r17, 0x00	; 0
     14e:	00 e0       	ldi	r16, 0x00	; 0
     150:	ff 24       	eor	r15, r15
		adc_done = 0;
		lcd_gotoxy(0,0);
		
		tempurature = ((analog*5.0)/256)*100;	

		printf("T=%2d F  MAX=%2d F",tempurature, maxtemp);
     152:	20 e6       	ldi	r18, 0x60	; 96
     154:	82 2e       	mov	r8, r18
     156:	20 e0       	ldi	r18, 0x00	; 0
     158:	92 2e       	mov	r9, r18
		
	}
	if(tempurature > maxtemp)
	{
		//alert for 1ms when new max temp
		PORTB = 0xFF;
     15a:	ee 24       	eor	r14, r14
     15c:	ea 94       	dec	r14
     15e:	90 ea       	ldi	r25, 0xA0	; 160
     160:	a9 2e       	mov	r10, r25
     162:	9f e0       	ldi	r25, 0x0F	; 15
     164:	b9 2e       	mov	r11, r25
		
		//sets the new max temp 4
		//degrees higher
		maxtemp = tempurature +4;
		lcd_clear();
		printf("New Max Temp!!!!");
     166:	83 e7       	ldi	r24, 0x73	; 115
     168:	c8 2e       	mov	r12, r24
     16a:	80 e0       	ldi	r24, 0x00	; 0
     16c:	d8 2e       	mov	r13, r24
     16e:	c0 e9       	ldi	r28, 0x90	; 144
     170:	d1 e0       	ldi	r29, 0x01	; 1

 sei();
 while(1)
 {

	if(timer)
     172:	80 91 b5 01 	lds	r24, 0x01B5
     176:	88 23       	and	r24, r24
     178:	c9 f0       	breq	.+50     	; 0x1ac <main+0x11a>
	{
		//just telling main that
		//the timer hit a 1/4 of a
		//second and that adc has started
		timer = 0;
     17a:	10 92 b5 01 	sts	0x01B5, r1
		adc_start_convert();
     17e:	0e 94 5d 01 	call	0x2ba	; 0x2ba <adc_start_convert>
		if(heartmon)
     182:	ff 20       	and	r15, r15
     184:	49 f0       	breq	.+18     	; 0x198 <main+0x106>
		{
			lcd_gotoxy(1,15);
     186:	81 e0       	ldi	r24, 0x01	; 1
     188:	6f e0       	ldi	r22, 0x0F	; 15
     18a:	0e 94 a9 01 	call	0x352	; 0x352 <lcd_gotoxy>
			lcd_custom(1); //heart
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	0e 94 16 02 	call	0x42c	; 0x42c <lcd_custom>
     194:	ff 24       	eor	r15, r15
     196:	0a c0       	rjmp	.+20     	; 0x1ac <main+0x11a>
			heartmon = 0;
		}
		else
		{
			lcd_gotoxy(1,15);
     198:	81 e0       	ldi	r24, 0x01	; 1
     19a:	6f e0       	ldi	r22, 0x0F	; 15
     19c:	0e 94 a9 01 	call	0x352	; 0x352 <lcd_gotoxy>
			printf(" ");
     1a0:	80 e2       	ldi	r24, 0x20	; 32
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	0e 94 da 08 	call	0x11b4	; 0x11b4 <putchar>
     1a8:	ff 24       	eor	r15, r15
     1aa:	f3 94       	inc	r15
			heartmon = 1;
		}
	}
	
	if(adc_done)
     1ac:	80 91 b6 01 	lds	r24, 0x01B6
     1b0:	88 23       	and	r24, r24
     1b2:	09 f4       	brne	.+2      	; 0x1b6 <main+0x124>
     1b4:	52 c0       	rjmp	.+164    	; 0x25a <main+0x1c8>
	{
		adc_done = 0;
     1b6:	10 92 b6 01 	sts	0x01B6, r1
		lcd_gotoxy(0,0);
     1ba:	80 e0       	ldi	r24, 0x00	; 0
     1bc:	60 e0       	ldi	r22, 0x00	; 0
     1be:	0e 94 a9 01 	call	0x352	; 0x352 <lcd_gotoxy>
		
		tempurature = ((analog*5.0)/256)*100;	
     1c2:	60 91 b3 01 	lds	r22, 0x01B3
     1c6:	70 91 b4 01 	lds	r23, 0x01B4
     1ca:	80 e0       	ldi	r24, 0x00	; 0
     1cc:	90 e0       	ldi	r25, 0x00	; 0
     1ce:	0e 94 20 06 	call	0xc40	; 0xc40 <__floatunsisf>
     1d2:	20 e0       	ldi	r18, 0x00	; 0
     1d4:	30 e0       	ldi	r19, 0x00	; 0
     1d6:	40 ea       	ldi	r20, 0xA0	; 160
     1d8:	50 e4       	ldi	r21, 0x40	; 64
     1da:	0e 94 a2 04 	call	0x944	; 0x944 <__mulsf3>
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e8       	ldi	r20, 0x80	; 128
     1e4:	5b e3       	ldi	r21, 0x3B	; 59
     1e6:	0e 94 a2 04 	call	0x944	; 0x944 <__mulsf3>
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	48 ec       	ldi	r20, 0xC8	; 200
     1f0:	52 e4       	ldi	r21, 0x42	; 66
     1f2:	0e 94 a2 04 	call	0x944	; 0x944 <__mulsf3>
     1f6:	0e 94 cc 02 	call	0x598	; 0x598 <__fixunssfsi>
     1fa:	16 2f       	mov	r17, r22

		printf("T=%2d F  MAX=%2d F",tempurature, maxtemp);
     1fc:	00 d0       	rcall	.+0      	; 0x1fe <main+0x16c>
     1fe:	00 d0       	rcall	.+0      	; 0x200 <main+0x16e>
     200:	00 d0       	rcall	.+0      	; 0x202 <main+0x170>
     202:	ed b7       	in	r30, 0x3d	; 61
     204:	fe b7       	in	r31, 0x3e	; 62
     206:	31 96       	adiw	r30, 0x01	; 1
     208:	ad b7       	in	r26, 0x3d	; 61
     20a:	be b7       	in	r27, 0x3e	; 62
     20c:	12 96       	adiw	r26, 0x02	; 2
     20e:	9c 92       	st	X, r9
     210:	8e 92       	st	-X, r8
     212:	11 97       	sbiw	r26, 0x01	; 1
     214:	62 83       	std	Z+2, r22	; 0x02
     216:	13 82       	std	Z+3, r1	; 0x03
     218:	04 83       	std	Z+4, r16	; 0x04
     21a:	15 82       	std	Z+5, r1	; 0x05
     21c:	0e 94 c5 08 	call	0x118a	; 0x118a <printf>
		lcd_gotoxy(0,4);
     220:	ed b7       	in	r30, 0x3d	; 61
     222:	fe b7       	in	r31, 0x3e	; 62
     224:	36 96       	adiw	r30, 0x06	; 6
     226:	0f b6       	in	r0, 0x3f	; 63
     228:	f8 94       	cli
     22a:	fe bf       	out	0x3e, r31	; 62
     22c:	0f be       	out	0x3f, r0	; 63
     22e:	ed bf       	out	0x3d, r30	; 61
     230:	80 e0       	ldi	r24, 0x00	; 0
     232:	64 e0       	ldi	r22, 0x04	; 4
     234:	0e 94 a9 01 	call	0x352	; 0x352 <lcd_gotoxy>
		lcd_custom(3); //degree symbol
     238:	83 e0       	ldi	r24, 0x03	; 3
     23a:	0e 94 16 02 	call	0x42c	; 0x42c <lcd_custom>
		lcd_gotoxy(0,14);
     23e:	80 e0       	ldi	r24, 0x00	; 0
     240:	6e e0       	ldi	r22, 0x0E	; 14
     242:	0e 94 a9 01 	call	0x352	; 0x352 <lcd_gotoxy>
		lcd_custom(3); //degree symbol
     246:	83 e0       	ldi	r24, 0x03	; 3
     248:	0e 94 16 02 	call	0x42c	; 0x42c <lcd_custom>

		lcd_gotoxy(1,14);
     24c:	81 e0       	ldi	r24, 0x01	; 1
     24e:	6e e0       	ldi	r22, 0x0E	; 14
     250:	0e 94 a9 01 	call	0x352	; 0x352 <lcd_gotoxy>
		lcd_custom(2); //music note
     254:	82 e0       	ldi	r24, 0x02	; 2
     256:	0e 94 16 02 	call	0x42c	; 0x42c <lcd_custom>
		
	}
	if(tempurature > maxtemp)
     25a:	01 17       	cp	r16, r17
     25c:	08 f0       	brcs	.+2      	; 0x260 <main+0x1ce>
     25e:	89 cf       	rjmp	.-238    	; 0x172 <main+0xe0>
	{
		//alert for 1ms when new max temp
		PORTB = 0xFF;
     260:	e8 ba       	out	0x18, r14	; 24
     262:	c5 01       	movw	r24, r10
     264:	01 97       	sbiw	r24, 0x01	; 1
     266:	f1 f7       	brne	.-4      	; 0x264 <main+0x1d2>
		_delay_ms(1);
		PORTB = 0x00;
     268:	18 ba       	out	0x18, r1	; 24
		
		//sets the new max temp 4
		//degrees higher
		maxtemp = tempurature +4;
		lcd_clear();
     26a:	0e 94 cb 01 	call	0x396	; 0x396 <lcd_clear>
		printf("New Max Temp!!!!");
     26e:	00 d0       	rcall	.+0      	; 0x270 <main+0x1de>
     270:	ad b7       	in	r26, 0x3d	; 61
     272:	be b7       	in	r27, 0x3e	; 62
     274:	12 96       	adiw	r26, 0x02	; 2
     276:	dc 92       	st	X, r13
     278:	ce 92       	st	-X, r12
     27a:	11 97       	sbiw	r26, 0x01	; 1
     27c:	0e 94 c5 08 	call	0x118a	; 0x118a <printf>
     280:	80 e1       	ldi	r24, 0x10	; 16
     282:	97 e2       	ldi	r25, 0x27	; 39
     284:	0f 90       	pop	r0
     286:	0f 90       	pop	r0
     288:	fe 01       	movw	r30, r28
     28a:	31 97       	sbiw	r30, 0x01	; 1
     28c:	f1 f7       	brne	.-4      	; 0x28a <main+0x1f8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     28e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     290:	d9 f7       	brne	.-10     	; 0x288 <main+0x1f6>
		_delay_ms(1);
		PORTB = 0x00;
		
		//sets the new max temp 4
		//degrees higher
		maxtemp = tempurature +4;
     292:	01 2f       	mov	r16, r17
     294:	0c 5f       	subi	r16, 0xFC	; 252
     296:	6d cf       	rjmp	.-294    	; 0x172 <main+0xe0>

00000298 <adc_init>:
 *	   ADC Multiplexer Selection*
 *	   Register					* 
 ********************************/
void setADMUX(uint8_t mux)
{
	ADMUX = mux;
     298:	80 e6       	ldi	r24, 0x60	; 96
     29a:	87 b9       	out	0x07, r24	; 7
 *	   ADC Control and Status 	*
 *	   Register					*
 ********************************/
void setADCSRA(uint8_t sra)
{
	ADCSRA = sra;
     29c:	8f ed       	ldi	r24, 0xDF	; 223
     29e:	86 b9       	out	0x06, r24	; 6
	setADMUX(0b01100000);

	//ADEN ADSC ADATE ADIF ADIE ADPS2 ADPS1 ADPS0
	setADCSRA(0b11011111);

	DDRB = 0xFF;
     2a0:	8f ef       	ldi	r24, 0xFF	; 255
     2a2:	87 bb       	out	0x17, r24	; 23
}
     2a4:	08 95       	ret

000002a6 <getADCH>:
/********************************
 *	returns the ADCH			*
 ********************************/
int getADCH(void)
{
	return ADCH;
     2a6:	85 b1       	in	r24, 0x05	; 5
}
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	08 95       	ret

000002ac <getADCL>:
/********************************
 *	returns the ADCL			*
 ********************************/
int getADCL(void)
{
	return ADCL;
     2ac:	84 b1       	in	r24, 0x04	; 4
}
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	08 95       	ret

000002b2 <setADMUX>:
 *	   ADC Multiplexer Selection*
 *	   Register					* 
 ********************************/
void setADMUX(uint8_t mux)
{
	ADMUX = mux;
     2b2:	87 b9       	out	0x07, r24	; 7
}
     2b4:	08 95       	ret

000002b6 <setADCSRA>:
 *	   ADC Control and Status 	*
 *	   Register					*
 ********************************/
void setADCSRA(uint8_t sra)
{
	ADCSRA = sra;
     2b6:	86 b9       	out	0x06, r24	; 6
}
     2b8:	08 95       	ret

000002ba <adc_start_convert>:
 ********************************/
void adc_start_convert(void)
{
	uint8_t temp = ADCSRA;
	temp = temp | (1<<ADSC);
	ADCSRA = temp;
     2ba:	36 9a       	sbi	0x06, 6	; 6
	
	while (ADCSRA & (1<<ADSC));
     2bc:	36 99       	sbic	0x06, 6	; 6
     2be:	fe cf       	rjmp	.-4      	; 0x2bc <adc_start_convert+0x2>
	
}
     2c0:	08 95       	ret

000002c2 <__vector_16>:
/********************************
 *	ISR							*
 *		for the ADC				*
 ********************************/
 ISR(ADC_vect)
 {
     2c2:	1f 92       	push	r1
     2c4:	0f 92       	push	r0
     2c6:	0f b6       	in	r0, 0x3f	; 63
     2c8:	0f 92       	push	r0
     2ca:	11 24       	eor	r1, r1
     2cc:	8f 93       	push	r24
     2ce:	9f 93       	push	r25
	adc_done = 1;
     2d0:	81 e0       	ldi	r24, 0x01	; 1
     2d2:	80 93 b6 01 	sts	0x01B6, r24
	analog = ADCH;
     2d6:	85 b1       	in	r24, 0x05	; 5
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	90 93 b4 01 	sts	0x01B4, r25
     2de:	80 93 b3 01 	sts	0x01B3, r24
	
	//43 is the number that is equivlant to 84 
	//degrees 
	if(analog >= 43)
     2e2:	80 91 b3 01 	lds	r24, 0x01B3
     2e6:	90 91 b4 01 	lds	r25, 0x01B4
     2ea:	8b 97       	sbiw	r24, 0x2b	; 43
     2ec:	18 f0       	brcs	.+6      	; 0x2f4 <__vector_16+0x32>
	{
		PORTB = 0xFF;
     2ee:	8f ef       	ldi	r24, 0xFF	; 255
     2f0:	88 bb       	out	0x18, r24	; 24
     2f2:	01 c0       	rjmp	.+2      	; 0x2f6 <__vector_16+0x34>
	}
	else
	{
		PORTB = 0x00;
     2f4:	18 ba       	out	0x18, r1	; 24
	}
 }
     2f6:	9f 91       	pop	r25
     2f8:	8f 91       	pop	r24
     2fa:	0f 90       	pop	r0
     2fc:	0f be       	out	0x3f, r0	; 63
     2fe:	0f 90       	pop	r0
     300:	1f 90       	pop	r1
     302:	18 95       	reti

00000304 <lcd_char>:
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     304:	5d 9b       	sbis	0x0b, 5	; 11
     306:	fe cf       	rjmp	.-4      	; 0x304 <lcd_char>
     308:	ea e6       	ldi	r30, 0x6A	; 106
     30a:	f8 e1       	ldi	r31, 0x18	; 24
     30c:	31 97       	sbiw	r30, 0x01	; 1
     30e:	f1 f7       	brne	.-4      	; 0x30c <lcd_char+0x8>
		_delay_ms(25);
		UDR = x;					// Send char
     310:	8c b9       	out	0x0c, r24	; 12
}
     312:	08 95       	ret

00000314 <lcd_string>:
*		string
*	Returns: void
*	
*******************************************************************/
void lcd_string(char *c)
{
     314:	fc 01       	movw	r30, r24
     316:	4a e6       	ldi	r20, 0x6A	; 106
     318:	58 e1       	ldi	r21, 0x18	; 24
     31a:	07 c0       	rjmp	.+14     	; 0x32a <lcd_string+0x16>
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     31c:	5d 9b       	sbis	0x0b, 5	; 11
     31e:	fe cf       	rjmp	.-4      	; 0x31c <lcd_string+0x8>
     320:	ca 01       	movw	r24, r20
     322:	01 97       	sbiw	r24, 0x01	; 1
     324:	f1 f7       	brne	.-4      	; 0x322 <lcd_string+0xe>
		_delay_ms(25);
		UDR = x;					// Send char
     326:	2c b9       	out	0x0c, r18	; 12
     328:	31 96       	adiw	r30, 0x01	; 1
*	Returns: void
*	
*******************************************************************/
void lcd_string(char *c)
{
	for(int i=0; c[i] != 0; i++)
     32a:	20 81       	ld	r18, Z
     32c:	22 23       	and	r18, r18
     32e:	b1 f7       	brne	.-20     	; 0x31c <lcd_string+0x8>
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     330:	5d 9b       	sbis	0x0b, 5	; 11
     332:	fe cf       	rjmp	.-4      	; 0x330 <lcd_string+0x1c>
     334:	8a e6       	ldi	r24, 0x6A	; 106
     336:	98 e1       	ldi	r25, 0x18	; 24
     338:	01 97       	sbiw	r24, 0x01	; 1
     33a:	f1 f7       	brne	.-4      	; 0x338 <lcd_string+0x24>
		_delay_ms(25);
		UDR = x;					// Send char
     33c:	8d e0       	ldi	r24, 0x0D	; 13
     33e:	8c b9       	out	0x0c, r24	; 12
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     340:	5d 9b       	sbis	0x0b, 5	; 11
     342:	fe cf       	rjmp	.-4      	; 0x340 <lcd_string+0x2c>
     344:	8a e6       	ldi	r24, 0x6A	; 106
     346:	98 e1       	ldi	r25, 0x18	; 24
     348:	01 97       	sbiw	r24, 0x01	; 1
     34a:	f1 f7       	brne	.-4      	; 0x348 <lcd_string+0x34>
		_delay_ms(25);
		UDR = x;					// Send char
     34c:	8a e0       	ldi	r24, 0x0A	; 10
     34e:	8c b9       	out	0x0c, r24	; 12
	{
		lcd_char(c[i]);
	}
	lcd_char(CR);
	lcd_char(LF);
}
     350:	08 95       	ret

00000352 <lcd_gotoxy>:
*		(0,0) is the upper left, 0 <= x or y <= 15
*	Returns: void
*	
*******************************************************************/
void lcd_gotoxy(uint8_t x, uint8_t y)
{
     352:	98 2f       	mov	r25, r24
	uint8_t output = 128; //cursor at line 0 position 0
	//makes sure the x and y corridnates fit within the lcd screen
	if((x <= 1) && (y <= 15))
     354:	82 30       	cpi	r24, 0x02	; 2
     356:	48 f4       	brcc	.+18     	; 0x36a <lcd_gotoxy+0x18>
     358:	60 31       	cpi	r22, 0x10	; 16
     35a:	38 f4       	brcc	.+14     	; 0x36a <lcd_gotoxy+0x18>
	{
		//0 line is 128 + y for each position
		//1 line is 148 + y for each position
		output += (x*20) + y;
     35c:	60 58       	subi	r22, 0x80	; 128
     35e:	84 e1       	ldi	r24, 0x14	; 20
     360:	98 9f       	mul	r25, r24
     362:	c0 01       	movw	r24, r0
     364:	11 24       	eor	r1, r1
     366:	68 0f       	add	r22, r24
     368:	01 c0       	rjmp	.+2      	; 0x36c <lcd_gotoxy+0x1a>
     36a:	60 e8       	ldi	r22, 0x80	; 128
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     36c:	5d 9b       	sbis	0x0b, 5	; 11
     36e:	fe cf       	rjmp	.-4      	; 0x36c <lcd_gotoxy+0x1a>
     370:	8a e6       	ldi	r24, 0x6A	; 106
     372:	98 e1       	ldi	r25, 0x18	; 24
     374:	01 97       	sbiw	r24, 0x01	; 1
     376:	f1 f7       	brne	.-4      	; 0x374 <lcd_gotoxy+0x22>
		_delay_ms(25);
		UDR = x;					// Send char
     378:	6c b9       	out	0x0c, r22	; 12
		//0 line is 128 + y for each position
		//1 line is 148 + y for each position
		output += (x*20) + y;
	}
	lcd_char(output);
}
     37a:	08 95       	ret

0000037c <lcd_ff>:
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     37c:	5d 9b       	sbis	0x0b, 5	; 11
     37e:	fe cf       	rjmp	.-4      	; 0x37c <lcd_ff>
     380:	2a e6       	ldi	r18, 0x6A	; 106
     382:	38 e1       	ldi	r19, 0x18	; 24
     384:	c9 01       	movw	r24, r18
     386:	01 97       	sbiw	r24, 0x01	; 1
     388:	f1 f7       	brne	.-4      	; 0x386 <lcd_ff+0xa>
		_delay_ms(25);
		UDR = x;					// Send char
     38a:	8c e0       	ldi	r24, 0x0C	; 12
     38c:	8c b9       	out	0x0c, r24	; 12
     38e:	c9 01       	movw	r24, r18
     390:	01 97       	sbiw	r24, 0x01	; 1
     392:	f1 f7       	brne	.-4      	; 0x390 <lcd_ff+0x14>
*******************************************************************/
void lcd_ff(void)
{
	lcd_char(FF);
	_delay_ms(25);
}
     394:	08 95       	ret

00000396 <lcd_clear>:
*	Returns: void
*	
*******************************************************************/
void lcd_clear(void)
{
	lcd_ff();
     396:	0e 94 be 01 	call	0x37c	; 0x37c <lcd_ff>
}
     39a:	08 95       	ret

0000039c <lcd_left>:
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     39c:	5d 9b       	sbis	0x0b, 5	; 11
     39e:	fe cf       	rjmp	.-4      	; 0x39c <lcd_left>
     3a0:	8a e6       	ldi	r24, 0x6A	; 106
     3a2:	98 e1       	ldi	r25, 0x18	; 24
     3a4:	01 97       	sbiw	r24, 0x01	; 1
     3a6:	f1 f7       	brne	.-4      	; 0x3a4 <lcd_left+0x8>
		_delay_ms(25);
		UDR = x;					// Send char
     3a8:	88 e0       	ldi	r24, 0x08	; 8
     3aa:	8c b9       	out	0x0c, r24	; 12
*	
*******************************************************************/
void lcd_left(void)
{
	lcd_char(BS);
}
     3ac:	08 95       	ret

000003ae <lcd_backlight>:
*******************************************************************/
void lcd_backlight(char state)
{
	// sets the light to ON as default
	uint8_t backlight = LIGHTON;
	if ( state == '0' )
     3ae:	80 33       	cpi	r24, 0x30	; 48
     3b0:	11 f4       	brne	.+4      	; 0x3b6 <lcd_backlight+0x8>
     3b2:	22 e1       	ldi	r18, 0x12	; 18
     3b4:	01 c0       	rjmp	.+2      	; 0x3b8 <lcd_backlight+0xa>
     3b6:	21 e1       	ldi	r18, 0x11	; 17
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     3b8:	5d 9b       	sbis	0x0b, 5	; 11
     3ba:	fe cf       	rjmp	.-4      	; 0x3b8 <lcd_backlight+0xa>
     3bc:	8a e6       	ldi	r24, 0x6A	; 106
     3be:	98 e1       	ldi	r25, 0x18	; 24
     3c0:	01 97       	sbiw	r24, 0x01	; 1
     3c2:	f1 f7       	brne	.-4      	; 0x3c0 <lcd_backlight+0x12>
		_delay_ms(25);
		UDR = x;					// Send char
     3c4:	2c b9       	out	0x0c, r18	; 12
	{
		// sets the light to off
		backlight = LIGHTOFF;
	}
	lcd_char(backlight);
}
     3c6:	08 95       	ret

000003c8 <lcd_switch>:
*******************************************************************/
void lcd_switch(char state)
{
	// sets the power to OFF as default
	uint8_t power = DISPLAYOFF;
	if ( state == '1' )
     3c8:	81 33       	cpi	r24, 0x31	; 49
     3ca:	21 f4       	brne	.+8      	; 0x3d4 <lcd_switch+0xc>
	{
		//turns the back light on then turns on the display
		lcd_backlight(ON);
     3cc:	0e 94 d7 01 	call	0x3ae	; 0x3ae <lcd_backlight>
     3d0:	26 e1       	ldi	r18, 0x16	; 22
     3d2:	04 c0       	rjmp	.+8      	; 0x3dc <lcd_switch+0x14>
		power = DISPLAYON;
	}
	else
	{
		//When the Display goes off the back light will also go off.
		lcd_backlight(OFF);
     3d4:	80 e3       	ldi	r24, 0x30	; 48
     3d6:	0e 94 d7 01 	call	0x3ae	; 0x3ae <lcd_backlight>
     3da:	25 e1       	ldi	r18, 0x15	; 21
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     3dc:	5d 9b       	sbis	0x0b, 5	; 11
     3de:	fe cf       	rjmp	.-4      	; 0x3dc <lcd_switch+0x14>
     3e0:	8a e6       	ldi	r24, 0x6A	; 106
     3e2:	98 e1       	ldi	r25, 0x18	; 24
     3e4:	01 97       	sbiw	r24, 0x01	; 1
     3e6:	f1 f7       	brne	.-4      	; 0x3e4 <lcd_switch+0x1c>
		_delay_ms(25);
		UDR = x;					// Send char
     3e8:	2c b9       	out	0x0c, r18	; 12
	{
		//When the Display goes off the back light will also go off.
		lcd_backlight(OFF);
	}
	lcd_char(power);
}
     3ea:	08 95       	ret

000003ec <lcd_define_char>:
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     3ec:	5d 9b       	sbis	0x0b, 5	; 11
     3ee:	fe cf       	rjmp	.-4      	; 0x3ec <lcd_define_char>
     3f0:	ea e6       	ldi	r30, 0x6A	; 106
     3f2:	f8 e1       	ldi	r31, 0x18	; 24
     3f4:	31 97       	sbiw	r30, 0x01	; 1
     3f6:	f1 f7       	brne	.-4      	; 0x3f4 <lcd_define_char+0x8>
*	Returns: void
*	
*******************************************************************/
void lcd_define_char(uint8_t num, char *data)
{
	lcd_char(num+247);
     3f8:	89 50       	subi	r24, 0x09	; 9
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
		_delay_ms(25);
		UDR = x;					// Send char
     3fa:	8c b9       	out	0x0c, r24	; 12
     3fc:	20 e0       	ldi	r18, 0x00	; 0
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	4a e6       	ldi	r20, 0x6A	; 106
     402:	58 e1       	ldi	r21, 0x18	; 24
void lcd_define_char(uint8_t num, char *data)
{
	lcd_char(num+247);
	for(int i=0; i < 8; i++)
	{
		lcd_char(data[i]);
     404:	fb 01       	movw	r30, r22
     406:	e2 0f       	add	r30, r18
     408:	f3 1f       	adc	r31, r19
     40a:	e0 81       	ld	r30, Z
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     40c:	5d 9b       	sbis	0x0b, 5	; 11
     40e:	fe cf       	rjmp	.-4      	; 0x40c <lcd_define_char+0x20>
     410:	ca 01       	movw	r24, r20
     412:	01 97       	sbiw	r24, 0x01	; 1
     414:	f1 f7       	brne	.-4      	; 0x412 <lcd_define_char+0x26>
		_delay_ms(25);
		UDR = x;					// Send char
     416:	ec b9       	out	0x0c, r30	; 12
*	
*******************************************************************/
void lcd_define_char(uint8_t num, char *data)
{
	lcd_char(num+247);
	for(int i=0; i < 8; i++)
     418:	2f 5f       	subi	r18, 0xFF	; 255
     41a:	3f 4f       	sbci	r19, 0xFF	; 255
     41c:	28 30       	cpi	r18, 0x08	; 8
     41e:	31 05       	cpc	r19, r1
     420:	89 f7       	brne	.-30     	; 0x404 <lcd_define_char+0x18>
     422:	84 e2       	ldi	r24, 0x24	; 36
     424:	94 ef       	ldi	r25, 0xF4	; 244
     426:	01 97       	sbiw	r24, 0x01	; 1
     428:	f1 f7       	brne	.-4      	; 0x426 <lcd_define_char+0x3a>
	{
		lcd_char(data[i]);
	}
	_delay_ms(250); //so the initalization can end
}
     42a:	08 95       	ret

0000042c <lcd_custom>:
*	Returns: void
*	
*******************************************************************/
void lcd_custom(uint8_t num)
{
	if(num <= 8)
     42c:	89 30       	cpi	r24, 0x09	; 9
     42e:	40 f4       	brcc	.+16     	; 0x440 <lcd_custom+0x14>
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     430:	5d 9b       	sbis	0x0b, 5	; 11
     432:	fe cf       	rjmp	.-4      	; 0x430 <lcd_custom+0x4>
     434:	ea e6       	ldi	r30, 0x6A	; 106
     436:	f8 e1       	ldi	r31, 0x18	; 24
     438:	31 97       	sbiw	r30, 0x01	; 1
     43a:	f1 f7       	brne	.-4      	; 0x438 <lcd_custom+0xc>
void lcd_custom(uint8_t num)
{
	if(num <= 8)
	//num works becasue the custom chars codes are 0-7
	//and will be stored in the same style
	lcd_char(num-1);
     43c:	81 50       	subi	r24, 0x01	; 1
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
		_delay_ms(25);
		UDR = x;					// Send char
     43e:	8c b9       	out	0x0c, r24	; 12
     440:	08 95       	ret

00000442 <lcd_heartbeat_icon>:
*	Parameters: none
*	Returns: void
*
*******************************************************************/
void lcd_heartbeat_icon(void)
{
     442:	df 93       	push	r29
     444:	cf 93       	push	r28
     446:	cd b7       	in	r28, 0x3d	; 61
     448:	de b7       	in	r29, 0x3e	; 62
     44a:	28 97       	sbiw	r28, 0x08	; 8
     44c:	0f b6       	in	r0, 0x3f	; 63
     44e:	f8 94       	cli
     450:	de bf       	out	0x3e, r29	; 62
     452:	0f be       	out	0x3f, r0	; 63
     454:	cd bf       	out	0x3d, r28	; 61
	                 0b00011111,
					 0b00011111,
					 0b00001110,
					 0b00001110,
					 0b00000100,
					 0b00000000};
     456:	de 01       	movw	r26, r28
     458:	11 96       	adiw	r26, 0x01	; 1
     45a:	e2 ea       	ldi	r30, 0xA2	; 162
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	88 e0       	ldi	r24, 0x08	; 8
     460:	01 90       	ld	r0, Z+
     462:	0d 92       	st	X+, r0
     464:	81 50       	subi	r24, 0x01	; 1
     466:	e1 f7       	brne	.-8      	; 0x460 <lcd_heartbeat_icon+0x1e>
   	char *ptr = custom;
	lcd_define_char(1, ptr);
     468:	81 e0       	ldi	r24, 0x01	; 1
     46a:	be 01       	movw	r22, r28
     46c:	6f 5f       	subi	r22, 0xFF	; 255
     46e:	7f 4f       	sbci	r23, 0xFF	; 255
     470:	0e 94 f6 01 	call	0x3ec	; 0x3ec <lcd_define_char>
}
     474:	28 96       	adiw	r28, 0x08	; 8
     476:	0f b6       	in	r0, 0x3f	; 63
     478:	f8 94       	cli
     47a:	de bf       	out	0x3e, r29	; 62
     47c:	0f be       	out	0x3f, r0	; 63
     47e:	cd bf       	out	0x3d, r28	; 61
     480:	cf 91       	pop	r28
     482:	df 91       	pop	r29
     484:	08 95       	ret

00000486 <lcd_sound_icon>:
*	Parameters: none
*	Returns: void
*
*******************************************************************/
void lcd_sound_icon(void)
{
     486:	df 93       	push	r29
     488:	cf 93       	push	r28
     48a:	cd b7       	in	r28, 0x3d	; 61
     48c:	de b7       	in	r29, 0x3e	; 62
     48e:	28 97       	sbiw	r28, 0x08	; 8
     490:	0f b6       	in	r0, 0x3f	; 63
     492:	f8 94       	cli
     494:	de bf       	out	0x3e, r29	; 62
     496:	0f be       	out	0x3f, r0	; 63
     498:	cd bf       	out	0x3d, r28	; 61
	                 0b00001001,
					 0b00010001,
					 0b00010000,
					 0b00010000,
					 0b00010000,
					 0b00000000};
     49a:	de 01       	movw	r26, r28
     49c:	11 96       	adiw	r26, 0x01	; 1
     49e:	ea e9       	ldi	r30, 0x9A	; 154
     4a0:	f0 e0       	ldi	r31, 0x00	; 0
     4a2:	88 e0       	ldi	r24, 0x08	; 8
     4a4:	01 90       	ld	r0, Z+
     4a6:	0d 92       	st	X+, r0
     4a8:	81 50       	subi	r24, 0x01	; 1
     4aa:	e1 f7       	brne	.-8      	; 0x4a4 <lcd_sound_icon+0x1e>
	char *ptr = custom;
	lcd_define_char(2, ptr);
     4ac:	82 e0       	ldi	r24, 0x02	; 2
     4ae:	be 01       	movw	r22, r28
     4b0:	6f 5f       	subi	r22, 0xFF	; 255
     4b2:	7f 4f       	sbci	r23, 0xFF	; 255
     4b4:	0e 94 f6 01 	call	0x3ec	; 0x3ec <lcd_define_char>
}
     4b8:	28 96       	adiw	r28, 0x08	; 8
     4ba:	0f b6       	in	r0, 0x3f	; 63
     4bc:	f8 94       	cli
     4be:	de bf       	out	0x3e, r29	; 62
     4c0:	0f be       	out	0x3f, r0	; 63
     4c2:	cd bf       	out	0x3d, r28	; 61
     4c4:	cf 91       	pop	r28
     4c6:	df 91       	pop	r29
     4c8:	08 95       	ret

000004ca <lcd_degree_icon>:
*	Parameters: none
*	Returns: void
*
*******************************************************************/
void lcd_degree_icon(void)
{
     4ca:	df 93       	push	r29
     4cc:	cf 93       	push	r28
     4ce:	cd b7       	in	r28, 0x3d	; 61
     4d0:	de b7       	in	r29, 0x3e	; 62
     4d2:	28 97       	sbiw	r28, 0x08	; 8
     4d4:	0f b6       	in	r0, 0x3f	; 63
     4d6:	f8 94       	cli
     4d8:	de bf       	out	0x3e, r29	; 62
     4da:	0f be       	out	0x3f, r0	; 63
     4dc:	cd bf       	out	0x3d, r28	; 61
	                 0b00001001,
					 0b00001001,
					 0b00000110,
					 0b00000000,
					 0b00000000,
					 0b00000000};
     4de:	de 01       	movw	r26, r28
     4e0:	11 96       	adiw	r26, 0x01	; 1
     4e2:	e2 e9       	ldi	r30, 0x92	; 146
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	88 e0       	ldi	r24, 0x08	; 8
     4e8:	01 90       	ld	r0, Z+
     4ea:	0d 92       	st	X+, r0
     4ec:	81 50       	subi	r24, 0x01	; 1
     4ee:	e1 f7       	brne	.-8      	; 0x4e8 <lcd_degree_icon+0x1e>
	char *ptr = custom;
	lcd_define_char(3, ptr);
     4f0:	83 e0       	ldi	r24, 0x03	; 3
     4f2:	be 01       	movw	r22, r28
     4f4:	6f 5f       	subi	r22, 0xFF	; 255
     4f6:	7f 4f       	sbci	r23, 0xFF	; 255
     4f8:	0e 94 f6 01 	call	0x3ec	; 0x3ec <lcd_define_char>
}
     4fc:	28 96       	adiw	r28, 0x08	; 8
     4fe:	0f b6       	in	r0, 0x3f	; 63
     500:	f8 94       	cli
     502:	de bf       	out	0x3e, r29	; 62
     504:	0f be       	out	0x3f, r0	; 63
     506:	cd bf       	out	0x3d, r28	; 61
     508:	cf 91       	pop	r28
     50a:	df 91       	pop	r29
     50c:	08 95       	ret

0000050e <lcd_init>:
*	
*******************************************************************/
void lcd_init(void)
{
	//sets up the usart
	UBRRH = 0;
     50e:	10 bc       	out	0x20, r1	; 32
	UBRRL = UBRR_VAL; 	// 9600 baud
     510:	87 e6       	ldi	r24, 0x67	; 103
     512:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1<<TXEN);	// Enable Tx 
     514:	88 e0       	ldi	r24, 0x08	; 8
     516:	8a b9       	out	0x0a, r24	; 10
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     518:	5d 9b       	sbis	0x0b, 5	; 11
     51a:	fe cf       	rjmp	.-4      	; 0x518 <lcd_init+0xa>
     51c:	8a e6       	ldi	r24, 0x6A	; 106
     51e:	98 e1       	ldi	r25, 0x18	; 24
     520:	01 97       	sbiw	r24, 0x01	; 1
     522:	f1 f7       	brne	.-4      	; 0x520 <lcd_init+0x12>
		_delay_ms(25);
		UDR = x;					// Send char
     524:	86 e1       	ldi	r24, 0x16	; 22
     526:	8c b9       	out	0x0c, r24	; 12
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     528:	5d 9b       	sbis	0x0b, 5	; 11
     52a:	fe cf       	rjmp	.-4      	; 0x528 <lcd_init+0x1a>
     52c:	8a e6       	ldi	r24, 0x6A	; 106
     52e:	98 e1       	ldi	r25, 0x18	; 24
     530:	01 97       	sbiw	r24, 0x01	; 1
     532:	f1 f7       	brne	.-4      	; 0x530 <lcd_init+0x22>
		_delay_ms(25);
		UDR = x;					// Send char
     534:	81 e1       	ldi	r24, 0x11	; 17
     536:	8c b9       	out	0x0c, r24	; 12
     538:	82 e1       	ldi	r24, 0x12	; 18
     53a:	9a e7       	ldi	r25, 0x7A	; 122
     53c:	01 97       	sbiw	r24, 0x01	; 1
     53e:	f1 f7       	brne	.-4      	; 0x53c <lcd_init+0x2e>
	lcd_char(DISPLAYON);
	lcd_char(LIGHTON);

	_delay_ms(125);
	//inits the Heart shape, Music note, and degree sybmol
	lcd_sound_icon();
     540:	0e 94 43 02 	call	0x486	; 0x486 <lcd_sound_icon>
	lcd_degree_icon();
     544:	0e 94 65 02 	call	0x4ca	; 0x4ca <lcd_degree_icon>
	lcd_heartbeat_icon();
     548:	0e 94 21 02 	call	0x442	; 0x442 <lcd_heartbeat_icon>
}
     54c:	08 95       	ret

0000054e <timer_init>:
 *	quater second intervals *
 ****************************/
void timer_init(void)
{
	//FOC0 WGM00 COM01 COM00 WGM01 CS02 CS01 CS00
	TCCR0 = 0b00000101;
     54e:	85 e0       	ldi	r24, 0x05	; 5
     550:	83 bf       	out	0x33, r24	; 51
	TCNT0 = 0;  //Initial Counter Value
     552:	12 be       	out	0x32, r1	; 50
	OCR0 = 255; //Count too
     554:	8f ef       	ldi	r24, 0xFF	; 255
     556:	8c bf       	out	0x3c, r24	; 60
	TIMSK = (1<<OCIE0); //timer compare match
     558:	82 e0       	ldi	r24, 0x02	; 2
     55a:	89 bf       	out	0x39, r24	; 57
}
     55c:	08 95       	ret

0000055e <__vector_10>:

ISR(TIMER0_COMP_vect)
{
     55e:	1f 92       	push	r1
     560:	0f 92       	push	r0
     562:	0f b6       	in	r0, 0x3f	; 63
     564:	0f 92       	push	r0
     566:	11 24       	eor	r1, r1
     568:	8f 93       	push	r24
	//it takes 15 times for the counter to go through
	//255 to be about a quarter of a second
	if( count  == 15)
     56a:	80 91 b2 01 	lds	r24, 0x01B2
     56e:	8f 30       	cpi	r24, 0x0F	; 15
     570:	41 f4       	brne	.+16     	; 0x582 <__vector_10+0x24>
	{
		timer = 1;
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	80 93 b5 01 	sts	0x01B5, r24
		//starts the ADC conversion every
		//1/4 of second
	
	while (ADCSRA & (1<<ADSC));
     578:	36 99       	sbic	0x06, 6	; 6
     57a:	fe cf       	rjmp	.-4      	; 0x578 <__vector_10+0x1a>
		count =0;
     57c:	10 92 b2 01 	sts	0x01B2, r1
     580:	05 c0       	rjmp	.+10     	; 0x58c <__vector_10+0x2e>
	}
	else
	{
		count++;
     582:	80 91 b2 01 	lds	r24, 0x01B2
     586:	8f 5f       	subi	r24, 0xFF	; 255
     588:	80 93 b2 01 	sts	0x01B2, r24
	}
}
     58c:	8f 91       	pop	r24
     58e:	0f 90       	pop	r0
     590:	0f be       	out	0x3f, r0	; 63
     592:	0f 90       	pop	r0
     594:	1f 90       	pop	r1
     596:	18 95       	reti

00000598 <__fixunssfsi>:
     598:	ef 92       	push	r14
     59a:	ff 92       	push	r15
     59c:	0f 93       	push	r16
     59e:	1f 93       	push	r17
     5a0:	7b 01       	movw	r14, r22
     5a2:	8c 01       	movw	r16, r24
     5a4:	20 e0       	ldi	r18, 0x00	; 0
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	40 e0       	ldi	r20, 0x00	; 0
     5aa:	5f e4       	ldi	r21, 0x4F	; 79
     5ac:	0e 94 9c 05 	call	0xb38	; 0xb38 <__gesf2>
     5b0:	88 23       	and	r24, r24
     5b2:	8c f0       	brlt	.+34     	; 0x5d6 <__fixunssfsi+0x3e>
     5b4:	c8 01       	movw	r24, r16
     5b6:	b7 01       	movw	r22, r14
     5b8:	20 e0       	ldi	r18, 0x00	; 0
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	40 e0       	ldi	r20, 0x00	; 0
     5be:	5f e4       	ldi	r21, 0x4F	; 79
     5c0:	0e 94 44 04 	call	0x888	; 0x888 <__subsf3>
     5c4:	0e 94 cc 05 	call	0xb98	; 0xb98 <__fixsfsi>
     5c8:	9b 01       	movw	r18, r22
     5ca:	ac 01       	movw	r20, r24
     5cc:	20 50       	subi	r18, 0x00	; 0
     5ce:	30 40       	sbci	r19, 0x00	; 0
     5d0:	40 40       	sbci	r20, 0x00	; 0
     5d2:	50 48       	sbci	r21, 0x80	; 128
     5d4:	06 c0       	rjmp	.+12     	; 0x5e2 <__fixunssfsi+0x4a>
     5d6:	c8 01       	movw	r24, r16
     5d8:	b7 01       	movw	r22, r14
     5da:	0e 94 cc 05 	call	0xb98	; 0xb98 <__fixsfsi>
     5de:	9b 01       	movw	r18, r22
     5e0:	ac 01       	movw	r20, r24
     5e2:	b9 01       	movw	r22, r18
     5e4:	ca 01       	movw	r24, r20
     5e6:	1f 91       	pop	r17
     5e8:	0f 91       	pop	r16
     5ea:	ff 90       	pop	r15
     5ec:	ef 90       	pop	r14
     5ee:	08 95       	ret

000005f0 <_fpadd_parts>:
     5f0:	a0 e0       	ldi	r26, 0x00	; 0
     5f2:	b0 e0       	ldi	r27, 0x00	; 0
     5f4:	ee ef       	ldi	r30, 0xFE	; 254
     5f6:	f2 e0       	ldi	r31, 0x02	; 2
     5f8:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__prologue_saves__>
     5fc:	dc 01       	movw	r26, r24
     5fe:	2b 01       	movw	r4, r22
     600:	fa 01       	movw	r30, r20
     602:	9c 91       	ld	r25, X
     604:	92 30       	cpi	r25, 0x02	; 2
     606:	08 f4       	brcc	.+2      	; 0x60a <_fpadd_parts+0x1a>
     608:	39 c1       	rjmp	.+626    	; 0x87c <__stack+0x1d>
     60a:	eb 01       	movw	r28, r22
     60c:	88 81       	ld	r24, Y
     60e:	82 30       	cpi	r24, 0x02	; 2
     610:	08 f4       	brcc	.+2      	; 0x614 <_fpadd_parts+0x24>
     612:	33 c1       	rjmp	.+614    	; 0x87a <__stack+0x1b>
     614:	94 30       	cpi	r25, 0x04	; 4
     616:	69 f4       	brne	.+26     	; 0x632 <_fpadd_parts+0x42>
     618:	84 30       	cpi	r24, 0x04	; 4
     61a:	09 f0       	breq	.+2      	; 0x61e <_fpadd_parts+0x2e>
     61c:	2f c1       	rjmp	.+606    	; 0x87c <__stack+0x1d>
     61e:	11 96       	adiw	r26, 0x01	; 1
     620:	9c 91       	ld	r25, X
     622:	11 97       	sbiw	r26, 0x01	; 1
     624:	89 81       	ldd	r24, Y+1	; 0x01
     626:	98 17       	cp	r25, r24
     628:	09 f4       	brne	.+2      	; 0x62c <_fpadd_parts+0x3c>
     62a:	28 c1       	rjmp	.+592    	; 0x87c <__stack+0x1d>
     62c:	aa ea       	ldi	r26, 0xAA	; 170
     62e:	b0 e0       	ldi	r27, 0x00	; 0
     630:	25 c1       	rjmp	.+586    	; 0x87c <__stack+0x1d>
     632:	84 30       	cpi	r24, 0x04	; 4
     634:	09 f4       	brne	.+2      	; 0x638 <_fpadd_parts+0x48>
     636:	21 c1       	rjmp	.+578    	; 0x87a <__stack+0x1b>
     638:	82 30       	cpi	r24, 0x02	; 2
     63a:	a9 f4       	brne	.+42     	; 0x666 <_fpadd_parts+0x76>
     63c:	92 30       	cpi	r25, 0x02	; 2
     63e:	09 f0       	breq	.+2      	; 0x642 <_fpadd_parts+0x52>
     640:	1d c1       	rjmp	.+570    	; 0x87c <__stack+0x1d>
     642:	9a 01       	movw	r18, r20
     644:	ad 01       	movw	r20, r26
     646:	88 e0       	ldi	r24, 0x08	; 8
     648:	ea 01       	movw	r28, r20
     64a:	09 90       	ld	r0, Y+
     64c:	ae 01       	movw	r20, r28
     64e:	e9 01       	movw	r28, r18
     650:	09 92       	st	Y+, r0
     652:	9e 01       	movw	r18, r28
     654:	81 50       	subi	r24, 0x01	; 1
     656:	c1 f7       	brne	.-16     	; 0x648 <_fpadd_parts+0x58>
     658:	e2 01       	movw	r28, r4
     65a:	89 81       	ldd	r24, Y+1	; 0x01
     65c:	11 96       	adiw	r26, 0x01	; 1
     65e:	9c 91       	ld	r25, X
     660:	89 23       	and	r24, r25
     662:	81 83       	std	Z+1, r24	; 0x01
     664:	08 c1       	rjmp	.+528    	; 0x876 <__stack+0x17>
     666:	92 30       	cpi	r25, 0x02	; 2
     668:	09 f4       	brne	.+2      	; 0x66c <_fpadd_parts+0x7c>
     66a:	07 c1       	rjmp	.+526    	; 0x87a <__stack+0x1b>
     66c:	12 96       	adiw	r26, 0x02	; 2
     66e:	2d 90       	ld	r2, X+
     670:	3c 90       	ld	r3, X
     672:	13 97       	sbiw	r26, 0x03	; 3
     674:	eb 01       	movw	r28, r22
     676:	8a 81       	ldd	r24, Y+2	; 0x02
     678:	9b 81       	ldd	r25, Y+3	; 0x03
     67a:	14 96       	adiw	r26, 0x04	; 4
     67c:	ad 90       	ld	r10, X+
     67e:	bd 90       	ld	r11, X+
     680:	cd 90       	ld	r12, X+
     682:	dc 90       	ld	r13, X
     684:	17 97       	sbiw	r26, 0x07	; 7
     686:	ec 80       	ldd	r14, Y+4	; 0x04
     688:	fd 80       	ldd	r15, Y+5	; 0x05
     68a:	0e 81       	ldd	r16, Y+6	; 0x06
     68c:	1f 81       	ldd	r17, Y+7	; 0x07
     68e:	91 01       	movw	r18, r2
     690:	28 1b       	sub	r18, r24
     692:	39 0b       	sbc	r19, r25
     694:	b9 01       	movw	r22, r18
     696:	37 ff       	sbrs	r19, 7
     698:	04 c0       	rjmp	.+8      	; 0x6a2 <_fpadd_parts+0xb2>
     69a:	66 27       	eor	r22, r22
     69c:	77 27       	eor	r23, r23
     69e:	62 1b       	sub	r22, r18
     6a0:	73 0b       	sbc	r23, r19
     6a2:	60 32       	cpi	r22, 0x20	; 32
     6a4:	71 05       	cpc	r23, r1
     6a6:	0c f0       	brlt	.+2      	; 0x6aa <_fpadd_parts+0xba>
     6a8:	61 c0       	rjmp	.+194    	; 0x76c <_fpadd_parts+0x17c>
     6aa:	12 16       	cp	r1, r18
     6ac:	13 06       	cpc	r1, r19
     6ae:	6c f5       	brge	.+90     	; 0x70a <_fpadd_parts+0x11a>
     6b0:	37 01       	movw	r6, r14
     6b2:	48 01       	movw	r8, r16
     6b4:	06 2e       	mov	r0, r22
     6b6:	04 c0       	rjmp	.+8      	; 0x6c0 <_fpadd_parts+0xd0>
     6b8:	96 94       	lsr	r9
     6ba:	87 94       	ror	r8
     6bc:	77 94       	ror	r7
     6be:	67 94       	ror	r6
     6c0:	0a 94       	dec	r0
     6c2:	d2 f7       	brpl	.-12     	; 0x6b8 <_fpadd_parts+0xc8>
     6c4:	21 e0       	ldi	r18, 0x01	; 1
     6c6:	30 e0       	ldi	r19, 0x00	; 0
     6c8:	40 e0       	ldi	r20, 0x00	; 0
     6ca:	50 e0       	ldi	r21, 0x00	; 0
     6cc:	04 c0       	rjmp	.+8      	; 0x6d6 <_fpadd_parts+0xe6>
     6ce:	22 0f       	add	r18, r18
     6d0:	33 1f       	adc	r19, r19
     6d2:	44 1f       	adc	r20, r20
     6d4:	55 1f       	adc	r21, r21
     6d6:	6a 95       	dec	r22
     6d8:	d2 f7       	brpl	.-12     	; 0x6ce <_fpadd_parts+0xde>
     6da:	21 50       	subi	r18, 0x01	; 1
     6dc:	30 40       	sbci	r19, 0x00	; 0
     6de:	40 40       	sbci	r20, 0x00	; 0
     6e0:	50 40       	sbci	r21, 0x00	; 0
     6e2:	2e 21       	and	r18, r14
     6e4:	3f 21       	and	r19, r15
     6e6:	40 23       	and	r20, r16
     6e8:	51 23       	and	r21, r17
     6ea:	21 15       	cp	r18, r1
     6ec:	31 05       	cpc	r19, r1
     6ee:	41 05       	cpc	r20, r1
     6f0:	51 05       	cpc	r21, r1
     6f2:	21 f0       	breq	.+8      	; 0x6fc <_fpadd_parts+0x10c>
     6f4:	21 e0       	ldi	r18, 0x01	; 1
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	40 e0       	ldi	r20, 0x00	; 0
     6fa:	50 e0       	ldi	r21, 0x00	; 0
     6fc:	79 01       	movw	r14, r18
     6fe:	8a 01       	movw	r16, r20
     700:	e6 28       	or	r14, r6
     702:	f7 28       	or	r15, r7
     704:	08 29       	or	r16, r8
     706:	19 29       	or	r17, r9
     708:	3c c0       	rjmp	.+120    	; 0x782 <_fpadd_parts+0x192>
     70a:	23 2b       	or	r18, r19
     70c:	d1 f1       	breq	.+116    	; 0x782 <_fpadd_parts+0x192>
     70e:	26 0e       	add	r2, r22
     710:	37 1e       	adc	r3, r23
     712:	35 01       	movw	r6, r10
     714:	46 01       	movw	r8, r12
     716:	06 2e       	mov	r0, r22
     718:	04 c0       	rjmp	.+8      	; 0x722 <_fpadd_parts+0x132>
     71a:	96 94       	lsr	r9
     71c:	87 94       	ror	r8
     71e:	77 94       	ror	r7
     720:	67 94       	ror	r6
     722:	0a 94       	dec	r0
     724:	d2 f7       	brpl	.-12     	; 0x71a <_fpadd_parts+0x12a>
     726:	21 e0       	ldi	r18, 0x01	; 1
     728:	30 e0       	ldi	r19, 0x00	; 0
     72a:	40 e0       	ldi	r20, 0x00	; 0
     72c:	50 e0       	ldi	r21, 0x00	; 0
     72e:	04 c0       	rjmp	.+8      	; 0x738 <_fpadd_parts+0x148>
     730:	22 0f       	add	r18, r18
     732:	33 1f       	adc	r19, r19
     734:	44 1f       	adc	r20, r20
     736:	55 1f       	adc	r21, r21
     738:	6a 95       	dec	r22
     73a:	d2 f7       	brpl	.-12     	; 0x730 <_fpadd_parts+0x140>
     73c:	21 50       	subi	r18, 0x01	; 1
     73e:	30 40       	sbci	r19, 0x00	; 0
     740:	40 40       	sbci	r20, 0x00	; 0
     742:	50 40       	sbci	r21, 0x00	; 0
     744:	2a 21       	and	r18, r10
     746:	3b 21       	and	r19, r11
     748:	4c 21       	and	r20, r12
     74a:	5d 21       	and	r21, r13
     74c:	21 15       	cp	r18, r1
     74e:	31 05       	cpc	r19, r1
     750:	41 05       	cpc	r20, r1
     752:	51 05       	cpc	r21, r1
     754:	21 f0       	breq	.+8      	; 0x75e <_fpadd_parts+0x16e>
     756:	21 e0       	ldi	r18, 0x01	; 1
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	40 e0       	ldi	r20, 0x00	; 0
     75c:	50 e0       	ldi	r21, 0x00	; 0
     75e:	59 01       	movw	r10, r18
     760:	6a 01       	movw	r12, r20
     762:	a6 28       	or	r10, r6
     764:	b7 28       	or	r11, r7
     766:	c8 28       	or	r12, r8
     768:	d9 28       	or	r13, r9
     76a:	0b c0       	rjmp	.+22     	; 0x782 <_fpadd_parts+0x192>
     76c:	82 15       	cp	r24, r2
     76e:	93 05       	cpc	r25, r3
     770:	2c f0       	brlt	.+10     	; 0x77c <_fpadd_parts+0x18c>
     772:	1c 01       	movw	r2, r24
     774:	aa 24       	eor	r10, r10
     776:	bb 24       	eor	r11, r11
     778:	65 01       	movw	r12, r10
     77a:	03 c0       	rjmp	.+6      	; 0x782 <_fpadd_parts+0x192>
     77c:	ee 24       	eor	r14, r14
     77e:	ff 24       	eor	r15, r15
     780:	87 01       	movw	r16, r14
     782:	11 96       	adiw	r26, 0x01	; 1
     784:	9c 91       	ld	r25, X
     786:	d2 01       	movw	r26, r4
     788:	11 96       	adiw	r26, 0x01	; 1
     78a:	8c 91       	ld	r24, X
     78c:	98 17       	cp	r25, r24
     78e:	09 f4       	brne	.+2      	; 0x792 <_fpadd_parts+0x1a2>
     790:	45 c0       	rjmp	.+138    	; 0x81c <_fpadd_parts+0x22c>
     792:	99 23       	and	r25, r25
     794:	39 f0       	breq	.+14     	; 0x7a4 <_fpadd_parts+0x1b4>
     796:	a8 01       	movw	r20, r16
     798:	97 01       	movw	r18, r14
     79a:	2a 19       	sub	r18, r10
     79c:	3b 09       	sbc	r19, r11
     79e:	4c 09       	sbc	r20, r12
     7a0:	5d 09       	sbc	r21, r13
     7a2:	06 c0       	rjmp	.+12     	; 0x7b0 <_fpadd_parts+0x1c0>
     7a4:	a6 01       	movw	r20, r12
     7a6:	95 01       	movw	r18, r10
     7a8:	2e 19       	sub	r18, r14
     7aa:	3f 09       	sbc	r19, r15
     7ac:	40 0b       	sbc	r20, r16
     7ae:	51 0b       	sbc	r21, r17
     7b0:	57 fd       	sbrc	r21, 7
     7b2:	08 c0       	rjmp	.+16     	; 0x7c4 <_fpadd_parts+0x1d4>
     7b4:	11 82       	std	Z+1, r1	; 0x01
     7b6:	33 82       	std	Z+3, r3	; 0x03
     7b8:	22 82       	std	Z+2, r2	; 0x02
     7ba:	24 83       	std	Z+4, r18	; 0x04
     7bc:	35 83       	std	Z+5, r19	; 0x05
     7be:	46 83       	std	Z+6, r20	; 0x06
     7c0:	57 83       	std	Z+7, r21	; 0x07
     7c2:	1d c0       	rjmp	.+58     	; 0x7fe <_fpadd_parts+0x20e>
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	81 83       	std	Z+1, r24	; 0x01
     7c8:	33 82       	std	Z+3, r3	; 0x03
     7ca:	22 82       	std	Z+2, r2	; 0x02
     7cc:	88 27       	eor	r24, r24
     7ce:	99 27       	eor	r25, r25
     7d0:	dc 01       	movw	r26, r24
     7d2:	82 1b       	sub	r24, r18
     7d4:	93 0b       	sbc	r25, r19
     7d6:	a4 0b       	sbc	r26, r20
     7d8:	b5 0b       	sbc	r27, r21
     7da:	84 83       	std	Z+4, r24	; 0x04
     7dc:	95 83       	std	Z+5, r25	; 0x05
     7de:	a6 83       	std	Z+6, r26	; 0x06
     7e0:	b7 83       	std	Z+7, r27	; 0x07
     7e2:	0d c0       	rjmp	.+26     	; 0x7fe <_fpadd_parts+0x20e>
     7e4:	22 0f       	add	r18, r18
     7e6:	33 1f       	adc	r19, r19
     7e8:	44 1f       	adc	r20, r20
     7ea:	55 1f       	adc	r21, r21
     7ec:	24 83       	std	Z+4, r18	; 0x04
     7ee:	35 83       	std	Z+5, r19	; 0x05
     7f0:	46 83       	std	Z+6, r20	; 0x06
     7f2:	57 83       	std	Z+7, r21	; 0x07
     7f4:	82 81       	ldd	r24, Z+2	; 0x02
     7f6:	93 81       	ldd	r25, Z+3	; 0x03
     7f8:	01 97       	sbiw	r24, 0x01	; 1
     7fa:	93 83       	std	Z+3, r25	; 0x03
     7fc:	82 83       	std	Z+2, r24	; 0x02
     7fe:	24 81       	ldd	r18, Z+4	; 0x04
     800:	35 81       	ldd	r19, Z+5	; 0x05
     802:	46 81       	ldd	r20, Z+6	; 0x06
     804:	57 81       	ldd	r21, Z+7	; 0x07
     806:	da 01       	movw	r26, r20
     808:	c9 01       	movw	r24, r18
     80a:	01 97       	sbiw	r24, 0x01	; 1
     80c:	a1 09       	sbc	r26, r1
     80e:	b1 09       	sbc	r27, r1
     810:	8f 5f       	subi	r24, 0xFF	; 255
     812:	9f 4f       	sbci	r25, 0xFF	; 255
     814:	af 4f       	sbci	r26, 0xFF	; 255
     816:	bf 43       	sbci	r27, 0x3F	; 63
     818:	28 f3       	brcs	.-54     	; 0x7e4 <_fpadd_parts+0x1f4>
     81a:	0b c0       	rjmp	.+22     	; 0x832 <_fpadd_parts+0x242>
     81c:	91 83       	std	Z+1, r25	; 0x01
     81e:	33 82       	std	Z+3, r3	; 0x03
     820:	22 82       	std	Z+2, r2	; 0x02
     822:	ea 0c       	add	r14, r10
     824:	fb 1c       	adc	r15, r11
     826:	0c 1d       	adc	r16, r12
     828:	1d 1d       	adc	r17, r13
     82a:	e4 82       	std	Z+4, r14	; 0x04
     82c:	f5 82       	std	Z+5, r15	; 0x05
     82e:	06 83       	std	Z+6, r16	; 0x06
     830:	17 83       	std	Z+7, r17	; 0x07
     832:	83 e0       	ldi	r24, 0x03	; 3
     834:	80 83       	st	Z, r24
     836:	24 81       	ldd	r18, Z+4	; 0x04
     838:	35 81       	ldd	r19, Z+5	; 0x05
     83a:	46 81       	ldd	r20, Z+6	; 0x06
     83c:	57 81       	ldd	r21, Z+7	; 0x07
     83e:	57 ff       	sbrs	r21, 7
     840:	1a c0       	rjmp	.+52     	; 0x876 <__stack+0x17>
     842:	c9 01       	movw	r24, r18
     844:	aa 27       	eor	r26, r26
     846:	97 fd       	sbrc	r25, 7
     848:	a0 95       	com	r26
     84a:	ba 2f       	mov	r27, r26
     84c:	81 70       	andi	r24, 0x01	; 1
     84e:	90 70       	andi	r25, 0x00	; 0
     850:	a0 70       	andi	r26, 0x00	; 0
     852:	b0 70       	andi	r27, 0x00	; 0
     854:	56 95       	lsr	r21
     856:	47 95       	ror	r20
     858:	37 95       	ror	r19
     85a:	27 95       	ror	r18
     85c:	82 2b       	or	r24, r18
     85e:	93 2b       	or	r25, r19
     860:	a4 2b       	or	r26, r20
     862:	b5 2b       	or	r27, r21
     864:	84 83       	std	Z+4, r24	; 0x04
     866:	95 83       	std	Z+5, r25	; 0x05
     868:	a6 83       	std	Z+6, r26	; 0x06
     86a:	b7 83       	std	Z+7, r27	; 0x07
     86c:	82 81       	ldd	r24, Z+2	; 0x02
     86e:	93 81       	ldd	r25, Z+3	; 0x03
     870:	01 96       	adiw	r24, 0x01	; 1
     872:	93 83       	std	Z+3, r25	; 0x03
     874:	82 83       	std	Z+2, r24	; 0x02
     876:	df 01       	movw	r26, r30
     878:	01 c0       	rjmp	.+2      	; 0x87c <__stack+0x1d>
     87a:	d2 01       	movw	r26, r4
     87c:	cd 01       	movw	r24, r26
     87e:	cd b7       	in	r28, 0x3d	; 61
     880:	de b7       	in	r29, 0x3e	; 62
     882:	e2 e1       	ldi	r30, 0x12	; 18
     884:	0c 94 aa 08 	jmp	0x1154	; 0x1154 <__epilogue_restores__>

00000888 <__subsf3>:
     888:	a0 e2       	ldi	r26, 0x20	; 32
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	ea e4       	ldi	r30, 0x4A	; 74
     88e:	f4 e0       	ldi	r31, 0x04	; 4
     890:	0c 94 9a 08 	jmp	0x1134	; 0x1134 <__prologue_saves__+0x18>
     894:	69 83       	std	Y+1, r22	; 0x01
     896:	7a 83       	std	Y+2, r23	; 0x02
     898:	8b 83       	std	Y+3, r24	; 0x03
     89a:	9c 83       	std	Y+4, r25	; 0x04
     89c:	2d 83       	std	Y+5, r18	; 0x05
     89e:	3e 83       	std	Y+6, r19	; 0x06
     8a0:	4f 83       	std	Y+7, r20	; 0x07
     8a2:	58 87       	std	Y+8, r21	; 0x08
     8a4:	e9 e0       	ldi	r30, 0x09	; 9
     8a6:	ee 2e       	mov	r14, r30
     8a8:	f1 2c       	mov	r15, r1
     8aa:	ec 0e       	add	r14, r28
     8ac:	fd 1e       	adc	r15, r29
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	b7 01       	movw	r22, r14
     8b4:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__unpack_f>
     8b8:	8e 01       	movw	r16, r28
     8ba:	0f 5e       	subi	r16, 0xEF	; 239
     8bc:	1f 4f       	sbci	r17, 0xFF	; 255
     8be:	ce 01       	movw	r24, r28
     8c0:	05 96       	adiw	r24, 0x05	; 5
     8c2:	b8 01       	movw	r22, r16
     8c4:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__unpack_f>
     8c8:	8a 89       	ldd	r24, Y+18	; 0x12
     8ca:	91 e0       	ldi	r25, 0x01	; 1
     8cc:	89 27       	eor	r24, r25
     8ce:	8a 8b       	std	Y+18, r24	; 0x12
     8d0:	c7 01       	movw	r24, r14
     8d2:	b8 01       	movw	r22, r16
     8d4:	ae 01       	movw	r20, r28
     8d6:	47 5e       	subi	r20, 0xE7	; 231
     8d8:	5f 4f       	sbci	r21, 0xFF	; 255
     8da:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <_fpadd_parts>
     8de:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__pack_f>
     8e2:	a0 96       	adiw	r28, 0x20	; 32
     8e4:	e6 e0       	ldi	r30, 0x06	; 6
     8e6:	0c 94 b6 08 	jmp	0x116c	; 0x116c <__epilogue_restores__+0x18>

000008ea <__addsf3>:
     8ea:	a0 e2       	ldi	r26, 0x20	; 32
     8ec:	b0 e0       	ldi	r27, 0x00	; 0
     8ee:	eb e7       	ldi	r30, 0x7B	; 123
     8f0:	f4 e0       	ldi	r31, 0x04	; 4
     8f2:	0c 94 9a 08 	jmp	0x1134	; 0x1134 <__prologue_saves__+0x18>
     8f6:	69 83       	std	Y+1, r22	; 0x01
     8f8:	7a 83       	std	Y+2, r23	; 0x02
     8fa:	8b 83       	std	Y+3, r24	; 0x03
     8fc:	9c 83       	std	Y+4, r25	; 0x04
     8fe:	2d 83       	std	Y+5, r18	; 0x05
     900:	3e 83       	std	Y+6, r19	; 0x06
     902:	4f 83       	std	Y+7, r20	; 0x07
     904:	58 87       	std	Y+8, r21	; 0x08
     906:	f9 e0       	ldi	r31, 0x09	; 9
     908:	ef 2e       	mov	r14, r31
     90a:	f1 2c       	mov	r15, r1
     90c:	ec 0e       	add	r14, r28
     90e:	fd 1e       	adc	r15, r29
     910:	ce 01       	movw	r24, r28
     912:	01 96       	adiw	r24, 0x01	; 1
     914:	b7 01       	movw	r22, r14
     916:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__unpack_f>
     91a:	8e 01       	movw	r16, r28
     91c:	0f 5e       	subi	r16, 0xEF	; 239
     91e:	1f 4f       	sbci	r17, 0xFF	; 255
     920:	ce 01       	movw	r24, r28
     922:	05 96       	adiw	r24, 0x05	; 5
     924:	b8 01       	movw	r22, r16
     926:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__unpack_f>
     92a:	c7 01       	movw	r24, r14
     92c:	b8 01       	movw	r22, r16
     92e:	ae 01       	movw	r20, r28
     930:	47 5e       	subi	r20, 0xE7	; 231
     932:	5f 4f       	sbci	r21, 0xFF	; 255
     934:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <_fpadd_parts>
     938:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__pack_f>
     93c:	a0 96       	adiw	r28, 0x20	; 32
     93e:	e6 e0       	ldi	r30, 0x06	; 6
     940:	0c 94 b6 08 	jmp	0x116c	; 0x116c <__epilogue_restores__+0x18>

00000944 <__mulsf3>:
     944:	a0 e2       	ldi	r26, 0x20	; 32
     946:	b0 e0       	ldi	r27, 0x00	; 0
     948:	e8 ea       	ldi	r30, 0xA8	; 168
     94a:	f4 e0       	ldi	r31, 0x04	; 4
     94c:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__prologue_saves__>
     950:	69 83       	std	Y+1, r22	; 0x01
     952:	7a 83       	std	Y+2, r23	; 0x02
     954:	8b 83       	std	Y+3, r24	; 0x03
     956:	9c 83       	std	Y+4, r25	; 0x04
     958:	2d 83       	std	Y+5, r18	; 0x05
     95a:	3e 83       	std	Y+6, r19	; 0x06
     95c:	4f 83       	std	Y+7, r20	; 0x07
     95e:	58 87       	std	Y+8, r21	; 0x08
     960:	ce 01       	movw	r24, r28
     962:	01 96       	adiw	r24, 0x01	; 1
     964:	be 01       	movw	r22, r28
     966:	67 5f       	subi	r22, 0xF7	; 247
     968:	7f 4f       	sbci	r23, 0xFF	; 255
     96a:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__unpack_f>
     96e:	ce 01       	movw	r24, r28
     970:	05 96       	adiw	r24, 0x05	; 5
     972:	be 01       	movw	r22, r28
     974:	6f 5e       	subi	r22, 0xEF	; 239
     976:	7f 4f       	sbci	r23, 0xFF	; 255
     978:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__unpack_f>
     97c:	99 85       	ldd	r25, Y+9	; 0x09
     97e:	92 30       	cpi	r25, 0x02	; 2
     980:	88 f0       	brcs	.+34     	; 0x9a4 <__mulsf3+0x60>
     982:	89 89       	ldd	r24, Y+17	; 0x11
     984:	82 30       	cpi	r24, 0x02	; 2
     986:	c8 f0       	brcs	.+50     	; 0x9ba <__mulsf3+0x76>
     988:	94 30       	cpi	r25, 0x04	; 4
     98a:	19 f4       	brne	.+6      	; 0x992 <__mulsf3+0x4e>
     98c:	82 30       	cpi	r24, 0x02	; 2
     98e:	51 f4       	brne	.+20     	; 0x9a4 <__mulsf3+0x60>
     990:	04 c0       	rjmp	.+8      	; 0x99a <__mulsf3+0x56>
     992:	84 30       	cpi	r24, 0x04	; 4
     994:	29 f4       	brne	.+10     	; 0x9a0 <__mulsf3+0x5c>
     996:	92 30       	cpi	r25, 0x02	; 2
     998:	81 f4       	brne	.+32     	; 0x9ba <__mulsf3+0x76>
     99a:	8a ea       	ldi	r24, 0xAA	; 170
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	c6 c0       	rjmp	.+396    	; 0xb2c <__mulsf3+0x1e8>
     9a0:	92 30       	cpi	r25, 0x02	; 2
     9a2:	49 f4       	brne	.+18     	; 0x9b6 <__mulsf3+0x72>
     9a4:	20 e0       	ldi	r18, 0x00	; 0
     9a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     9a8:	8a 89       	ldd	r24, Y+18	; 0x12
     9aa:	98 13       	cpse	r25, r24
     9ac:	21 e0       	ldi	r18, 0x01	; 1
     9ae:	2a 87       	std	Y+10, r18	; 0x0a
     9b0:	ce 01       	movw	r24, r28
     9b2:	09 96       	adiw	r24, 0x09	; 9
     9b4:	bb c0       	rjmp	.+374    	; 0xb2c <__mulsf3+0x1e8>
     9b6:	82 30       	cpi	r24, 0x02	; 2
     9b8:	49 f4       	brne	.+18     	; 0x9cc <__mulsf3+0x88>
     9ba:	20 e0       	ldi	r18, 0x00	; 0
     9bc:	9a 85       	ldd	r25, Y+10	; 0x0a
     9be:	8a 89       	ldd	r24, Y+18	; 0x12
     9c0:	98 13       	cpse	r25, r24
     9c2:	21 e0       	ldi	r18, 0x01	; 1
     9c4:	2a 8b       	std	Y+18, r18	; 0x12
     9c6:	ce 01       	movw	r24, r28
     9c8:	41 96       	adiw	r24, 0x11	; 17
     9ca:	b0 c0       	rjmp	.+352    	; 0xb2c <__mulsf3+0x1e8>
     9cc:	2d 84       	ldd	r2, Y+13	; 0x0d
     9ce:	3e 84       	ldd	r3, Y+14	; 0x0e
     9d0:	4f 84       	ldd	r4, Y+15	; 0x0f
     9d2:	58 88       	ldd	r5, Y+16	; 0x10
     9d4:	6d 88       	ldd	r6, Y+21	; 0x15
     9d6:	7e 88       	ldd	r7, Y+22	; 0x16
     9d8:	8f 88       	ldd	r8, Y+23	; 0x17
     9da:	98 8c       	ldd	r9, Y+24	; 0x18
     9dc:	ee 24       	eor	r14, r14
     9de:	ff 24       	eor	r15, r15
     9e0:	87 01       	movw	r16, r14
     9e2:	aa 24       	eor	r10, r10
     9e4:	bb 24       	eor	r11, r11
     9e6:	65 01       	movw	r12, r10
     9e8:	40 e0       	ldi	r20, 0x00	; 0
     9ea:	50 e0       	ldi	r21, 0x00	; 0
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	e0 e0       	ldi	r30, 0x00	; 0
     9f2:	f0 e0       	ldi	r31, 0x00	; 0
     9f4:	c1 01       	movw	r24, r2
     9f6:	81 70       	andi	r24, 0x01	; 1
     9f8:	90 70       	andi	r25, 0x00	; 0
     9fa:	89 2b       	or	r24, r25
     9fc:	e9 f0       	breq	.+58     	; 0xa38 <__mulsf3+0xf4>
     9fe:	e6 0c       	add	r14, r6
     a00:	f7 1c       	adc	r15, r7
     a02:	08 1d       	adc	r16, r8
     a04:	19 1d       	adc	r17, r9
     a06:	9a 01       	movw	r18, r20
     a08:	ab 01       	movw	r20, r22
     a0a:	2a 0d       	add	r18, r10
     a0c:	3b 1d       	adc	r19, r11
     a0e:	4c 1d       	adc	r20, r12
     a10:	5d 1d       	adc	r21, r13
     a12:	80 e0       	ldi	r24, 0x00	; 0
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	a0 e0       	ldi	r26, 0x00	; 0
     a18:	b0 e0       	ldi	r27, 0x00	; 0
     a1a:	e6 14       	cp	r14, r6
     a1c:	f7 04       	cpc	r15, r7
     a1e:	08 05       	cpc	r16, r8
     a20:	19 05       	cpc	r17, r9
     a22:	20 f4       	brcc	.+8      	; 0xa2c <__mulsf3+0xe8>
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	a0 e0       	ldi	r26, 0x00	; 0
     a2a:	b0 e0       	ldi	r27, 0x00	; 0
     a2c:	ba 01       	movw	r22, r20
     a2e:	a9 01       	movw	r20, r18
     a30:	48 0f       	add	r20, r24
     a32:	59 1f       	adc	r21, r25
     a34:	6a 1f       	adc	r22, r26
     a36:	7b 1f       	adc	r23, r27
     a38:	aa 0c       	add	r10, r10
     a3a:	bb 1c       	adc	r11, r11
     a3c:	cc 1c       	adc	r12, r12
     a3e:	dd 1c       	adc	r13, r13
     a40:	97 fe       	sbrs	r9, 7
     a42:	08 c0       	rjmp	.+16     	; 0xa54 <__mulsf3+0x110>
     a44:	81 e0       	ldi	r24, 0x01	; 1
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	a0 e0       	ldi	r26, 0x00	; 0
     a4a:	b0 e0       	ldi	r27, 0x00	; 0
     a4c:	a8 2a       	or	r10, r24
     a4e:	b9 2a       	or	r11, r25
     a50:	ca 2a       	or	r12, r26
     a52:	db 2a       	or	r13, r27
     a54:	31 96       	adiw	r30, 0x01	; 1
     a56:	e0 32       	cpi	r30, 0x20	; 32
     a58:	f1 05       	cpc	r31, r1
     a5a:	49 f0       	breq	.+18     	; 0xa6e <__mulsf3+0x12a>
     a5c:	66 0c       	add	r6, r6
     a5e:	77 1c       	adc	r7, r7
     a60:	88 1c       	adc	r8, r8
     a62:	99 1c       	adc	r9, r9
     a64:	56 94       	lsr	r5
     a66:	47 94       	ror	r4
     a68:	37 94       	ror	r3
     a6a:	27 94       	ror	r2
     a6c:	c3 cf       	rjmp	.-122    	; 0x9f4 <__mulsf3+0xb0>
     a6e:	fa 85       	ldd	r31, Y+10	; 0x0a
     a70:	ea 89       	ldd	r30, Y+18	; 0x12
     a72:	2b 89       	ldd	r18, Y+19	; 0x13
     a74:	3c 89       	ldd	r19, Y+20	; 0x14
     a76:	8b 85       	ldd	r24, Y+11	; 0x0b
     a78:	9c 85       	ldd	r25, Y+12	; 0x0c
     a7a:	28 0f       	add	r18, r24
     a7c:	39 1f       	adc	r19, r25
     a7e:	2e 5f       	subi	r18, 0xFE	; 254
     a80:	3f 4f       	sbci	r19, 0xFF	; 255
     a82:	17 c0       	rjmp	.+46     	; 0xab2 <__mulsf3+0x16e>
     a84:	ca 01       	movw	r24, r20
     a86:	81 70       	andi	r24, 0x01	; 1
     a88:	90 70       	andi	r25, 0x00	; 0
     a8a:	89 2b       	or	r24, r25
     a8c:	61 f0       	breq	.+24     	; 0xaa6 <__mulsf3+0x162>
     a8e:	16 95       	lsr	r17
     a90:	07 95       	ror	r16
     a92:	f7 94       	ror	r15
     a94:	e7 94       	ror	r14
     a96:	80 e0       	ldi	r24, 0x00	; 0
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e8       	ldi	r27, 0x80	; 128
     a9e:	e8 2a       	or	r14, r24
     aa0:	f9 2a       	or	r15, r25
     aa2:	0a 2b       	or	r16, r26
     aa4:	1b 2b       	or	r17, r27
     aa6:	76 95       	lsr	r23
     aa8:	67 95       	ror	r22
     aaa:	57 95       	ror	r21
     aac:	47 95       	ror	r20
     aae:	2f 5f       	subi	r18, 0xFF	; 255
     ab0:	3f 4f       	sbci	r19, 0xFF	; 255
     ab2:	77 fd       	sbrc	r23, 7
     ab4:	e7 cf       	rjmp	.-50     	; 0xa84 <__mulsf3+0x140>
     ab6:	0c c0       	rjmp	.+24     	; 0xad0 <__mulsf3+0x18c>
     ab8:	44 0f       	add	r20, r20
     aba:	55 1f       	adc	r21, r21
     abc:	66 1f       	adc	r22, r22
     abe:	77 1f       	adc	r23, r23
     ac0:	17 fd       	sbrc	r17, 7
     ac2:	41 60       	ori	r20, 0x01	; 1
     ac4:	ee 0c       	add	r14, r14
     ac6:	ff 1c       	adc	r15, r15
     ac8:	00 1f       	adc	r16, r16
     aca:	11 1f       	adc	r17, r17
     acc:	21 50       	subi	r18, 0x01	; 1
     ace:	30 40       	sbci	r19, 0x00	; 0
     ad0:	40 30       	cpi	r20, 0x00	; 0
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	59 07       	cpc	r21, r25
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	69 07       	cpc	r22, r25
     ada:	90 e4       	ldi	r25, 0x40	; 64
     adc:	79 07       	cpc	r23, r25
     ade:	60 f3       	brcs	.-40     	; 0xab8 <__mulsf3+0x174>
     ae0:	2b 8f       	std	Y+27, r18	; 0x1b
     ae2:	3c 8f       	std	Y+28, r19	; 0x1c
     ae4:	db 01       	movw	r26, r22
     ae6:	ca 01       	movw	r24, r20
     ae8:	8f 77       	andi	r24, 0x7F	; 127
     aea:	90 70       	andi	r25, 0x00	; 0
     aec:	a0 70       	andi	r26, 0x00	; 0
     aee:	b0 70       	andi	r27, 0x00	; 0
     af0:	80 34       	cpi	r24, 0x40	; 64
     af2:	91 05       	cpc	r25, r1
     af4:	a1 05       	cpc	r26, r1
     af6:	b1 05       	cpc	r27, r1
     af8:	61 f4       	brne	.+24     	; 0xb12 <__mulsf3+0x1ce>
     afa:	47 fd       	sbrc	r20, 7
     afc:	0a c0       	rjmp	.+20     	; 0xb12 <__mulsf3+0x1ce>
     afe:	e1 14       	cp	r14, r1
     b00:	f1 04       	cpc	r15, r1
     b02:	01 05       	cpc	r16, r1
     b04:	11 05       	cpc	r17, r1
     b06:	29 f0       	breq	.+10     	; 0xb12 <__mulsf3+0x1ce>
     b08:	40 5c       	subi	r20, 0xC0	; 192
     b0a:	5f 4f       	sbci	r21, 0xFF	; 255
     b0c:	6f 4f       	sbci	r22, 0xFF	; 255
     b0e:	7f 4f       	sbci	r23, 0xFF	; 255
     b10:	40 78       	andi	r20, 0x80	; 128
     b12:	1a 8e       	std	Y+26, r1	; 0x1a
     b14:	fe 17       	cp	r31, r30
     b16:	11 f0       	breq	.+4      	; 0xb1c <__mulsf3+0x1d8>
     b18:	81 e0       	ldi	r24, 0x01	; 1
     b1a:	8a 8f       	std	Y+26, r24	; 0x1a
     b1c:	4d 8f       	std	Y+29, r20	; 0x1d
     b1e:	5e 8f       	std	Y+30, r21	; 0x1e
     b20:	6f 8f       	std	Y+31, r22	; 0x1f
     b22:	78 a3       	std	Y+32, r23	; 0x20
     b24:	83 e0       	ldi	r24, 0x03	; 3
     b26:	89 8f       	std	Y+25, r24	; 0x19
     b28:	ce 01       	movw	r24, r28
     b2a:	49 96       	adiw	r24, 0x19	; 25
     b2c:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__pack_f>
     b30:	a0 96       	adiw	r28, 0x20	; 32
     b32:	e2 e1       	ldi	r30, 0x12	; 18
     b34:	0c 94 aa 08 	jmp	0x1154	; 0x1154 <__epilogue_restores__>

00000b38 <__gesf2>:
     b38:	a8 e1       	ldi	r26, 0x18	; 24
     b3a:	b0 e0       	ldi	r27, 0x00	; 0
     b3c:	e2 ea       	ldi	r30, 0xA2	; 162
     b3e:	f5 e0       	ldi	r31, 0x05	; 5
     b40:	0c 94 9a 08 	jmp	0x1134	; 0x1134 <__prologue_saves__+0x18>
     b44:	69 83       	std	Y+1, r22	; 0x01
     b46:	7a 83       	std	Y+2, r23	; 0x02
     b48:	8b 83       	std	Y+3, r24	; 0x03
     b4a:	9c 83       	std	Y+4, r25	; 0x04
     b4c:	2d 83       	std	Y+5, r18	; 0x05
     b4e:	3e 83       	std	Y+6, r19	; 0x06
     b50:	4f 83       	std	Y+7, r20	; 0x07
     b52:	58 87       	std	Y+8, r21	; 0x08
     b54:	89 e0       	ldi	r24, 0x09	; 9
     b56:	e8 2e       	mov	r14, r24
     b58:	f1 2c       	mov	r15, r1
     b5a:	ec 0e       	add	r14, r28
     b5c:	fd 1e       	adc	r15, r29
     b5e:	ce 01       	movw	r24, r28
     b60:	01 96       	adiw	r24, 0x01	; 1
     b62:	b7 01       	movw	r22, r14
     b64:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__unpack_f>
     b68:	8e 01       	movw	r16, r28
     b6a:	0f 5e       	subi	r16, 0xEF	; 239
     b6c:	1f 4f       	sbci	r17, 0xFF	; 255
     b6e:	ce 01       	movw	r24, r28
     b70:	05 96       	adiw	r24, 0x05	; 5
     b72:	b8 01       	movw	r22, r16
     b74:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__unpack_f>
     b78:	89 85       	ldd	r24, Y+9	; 0x09
     b7a:	82 30       	cpi	r24, 0x02	; 2
     b7c:	40 f0       	brcs	.+16     	; 0xb8e <__gesf2+0x56>
     b7e:	89 89       	ldd	r24, Y+17	; 0x11
     b80:	82 30       	cpi	r24, 0x02	; 2
     b82:	28 f0       	brcs	.+10     	; 0xb8e <__gesf2+0x56>
     b84:	c7 01       	movw	r24, r14
     b86:	b8 01       	movw	r22, r16
     b88:	0e 94 35 08 	call	0x106a	; 0x106a <__fpcmp_parts_f>
     b8c:	01 c0       	rjmp	.+2      	; 0xb90 <__gesf2+0x58>
     b8e:	8f ef       	ldi	r24, 0xFF	; 255
     b90:	68 96       	adiw	r28, 0x18	; 24
     b92:	e6 e0       	ldi	r30, 0x06	; 6
     b94:	0c 94 b6 08 	jmp	0x116c	; 0x116c <__epilogue_restores__+0x18>

00000b98 <__fixsfsi>:
     b98:	ac e0       	ldi	r26, 0x0C	; 12
     b9a:	b0 e0       	ldi	r27, 0x00	; 0
     b9c:	e2 ed       	ldi	r30, 0xD2	; 210
     b9e:	f5 e0       	ldi	r31, 0x05	; 5
     ba0:	0c 94 9e 08 	jmp	0x113c	; 0x113c <__prologue_saves__+0x20>
     ba4:	69 83       	std	Y+1, r22	; 0x01
     ba6:	7a 83       	std	Y+2, r23	; 0x02
     ba8:	8b 83       	std	Y+3, r24	; 0x03
     baa:	9c 83       	std	Y+4, r25	; 0x04
     bac:	ce 01       	movw	r24, r28
     bae:	01 96       	adiw	r24, 0x01	; 1
     bb0:	be 01       	movw	r22, r28
     bb2:	6b 5f       	subi	r22, 0xFB	; 251
     bb4:	7f 4f       	sbci	r23, 0xFF	; 255
     bb6:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__unpack_f>
     bba:	8d 81       	ldd	r24, Y+5	; 0x05
     bbc:	82 30       	cpi	r24, 0x02	; 2
     bbe:	61 f1       	breq	.+88     	; 0xc18 <__fixsfsi+0x80>
     bc0:	82 30       	cpi	r24, 0x02	; 2
     bc2:	50 f1       	brcs	.+84     	; 0xc18 <__fixsfsi+0x80>
     bc4:	84 30       	cpi	r24, 0x04	; 4
     bc6:	21 f4       	brne	.+8      	; 0xbd0 <__fixsfsi+0x38>
     bc8:	8e 81       	ldd	r24, Y+6	; 0x06
     bca:	88 23       	and	r24, r24
     bcc:	51 f1       	breq	.+84     	; 0xc22 <__fixsfsi+0x8a>
     bce:	2e c0       	rjmp	.+92     	; 0xc2c <__fixsfsi+0x94>
     bd0:	2f 81       	ldd	r18, Y+7	; 0x07
     bd2:	38 85       	ldd	r19, Y+8	; 0x08
     bd4:	37 fd       	sbrc	r19, 7
     bd6:	20 c0       	rjmp	.+64     	; 0xc18 <__fixsfsi+0x80>
     bd8:	6e 81       	ldd	r22, Y+6	; 0x06
     bda:	2f 31       	cpi	r18, 0x1F	; 31
     bdc:	31 05       	cpc	r19, r1
     bde:	1c f0       	brlt	.+6      	; 0xbe6 <__fixsfsi+0x4e>
     be0:	66 23       	and	r22, r22
     be2:	f9 f0       	breq	.+62     	; 0xc22 <__fixsfsi+0x8a>
     be4:	23 c0       	rjmp	.+70     	; 0xc2c <__fixsfsi+0x94>
     be6:	8e e1       	ldi	r24, 0x1E	; 30
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	82 1b       	sub	r24, r18
     bec:	93 0b       	sbc	r25, r19
     bee:	29 85       	ldd	r18, Y+9	; 0x09
     bf0:	3a 85       	ldd	r19, Y+10	; 0x0a
     bf2:	4b 85       	ldd	r20, Y+11	; 0x0b
     bf4:	5c 85       	ldd	r21, Y+12	; 0x0c
     bf6:	04 c0       	rjmp	.+8      	; 0xc00 <__fixsfsi+0x68>
     bf8:	56 95       	lsr	r21
     bfa:	47 95       	ror	r20
     bfc:	37 95       	ror	r19
     bfe:	27 95       	ror	r18
     c00:	8a 95       	dec	r24
     c02:	d2 f7       	brpl	.-12     	; 0xbf8 <__fixsfsi+0x60>
     c04:	66 23       	and	r22, r22
     c06:	b1 f0       	breq	.+44     	; 0xc34 <__fixsfsi+0x9c>
     c08:	50 95       	com	r21
     c0a:	40 95       	com	r20
     c0c:	30 95       	com	r19
     c0e:	21 95       	neg	r18
     c10:	3f 4f       	sbci	r19, 0xFF	; 255
     c12:	4f 4f       	sbci	r20, 0xFF	; 255
     c14:	5f 4f       	sbci	r21, 0xFF	; 255
     c16:	0e c0       	rjmp	.+28     	; 0xc34 <__fixsfsi+0x9c>
     c18:	20 e0       	ldi	r18, 0x00	; 0
     c1a:	30 e0       	ldi	r19, 0x00	; 0
     c1c:	40 e0       	ldi	r20, 0x00	; 0
     c1e:	50 e0       	ldi	r21, 0x00	; 0
     c20:	09 c0       	rjmp	.+18     	; 0xc34 <__fixsfsi+0x9c>
     c22:	2f ef       	ldi	r18, 0xFF	; 255
     c24:	3f ef       	ldi	r19, 0xFF	; 255
     c26:	4f ef       	ldi	r20, 0xFF	; 255
     c28:	5f e7       	ldi	r21, 0x7F	; 127
     c2a:	04 c0       	rjmp	.+8      	; 0xc34 <__fixsfsi+0x9c>
     c2c:	20 e0       	ldi	r18, 0x00	; 0
     c2e:	30 e0       	ldi	r19, 0x00	; 0
     c30:	40 e0       	ldi	r20, 0x00	; 0
     c32:	50 e8       	ldi	r21, 0x80	; 128
     c34:	b9 01       	movw	r22, r18
     c36:	ca 01       	movw	r24, r20
     c38:	2c 96       	adiw	r28, 0x0c	; 12
     c3a:	e2 e0       	ldi	r30, 0x02	; 2
     c3c:	0c 94 ba 08 	jmp	0x1174	; 0x1174 <__epilogue_restores__+0x20>

00000c40 <__floatunsisf>:
     c40:	a8 e0       	ldi	r26, 0x08	; 8
     c42:	b0 e0       	ldi	r27, 0x00	; 0
     c44:	e6 e2       	ldi	r30, 0x26	; 38
     c46:	f6 e0       	ldi	r31, 0x06	; 6
     c48:	0c 94 96 08 	jmp	0x112c	; 0x112c <__prologue_saves__+0x10>
     c4c:	7b 01       	movw	r14, r22
     c4e:	8c 01       	movw	r16, r24
     c50:	61 15       	cp	r22, r1
     c52:	71 05       	cpc	r23, r1
     c54:	81 05       	cpc	r24, r1
     c56:	91 05       	cpc	r25, r1
     c58:	19 f4       	brne	.+6      	; 0xc60 <__floatunsisf+0x20>
     c5a:	82 e0       	ldi	r24, 0x02	; 2
     c5c:	89 83       	std	Y+1, r24	; 0x01
     c5e:	60 c0       	rjmp	.+192    	; 0xd20 <__floatunsisf+0xe0>
     c60:	83 e0       	ldi	r24, 0x03	; 3
     c62:	89 83       	std	Y+1, r24	; 0x01
     c64:	8e e1       	ldi	r24, 0x1E	; 30
     c66:	c8 2e       	mov	r12, r24
     c68:	d1 2c       	mov	r13, r1
     c6a:	dc 82       	std	Y+4, r13	; 0x04
     c6c:	cb 82       	std	Y+3, r12	; 0x03
     c6e:	ed 82       	std	Y+5, r14	; 0x05
     c70:	fe 82       	std	Y+6, r15	; 0x06
     c72:	0f 83       	std	Y+7, r16	; 0x07
     c74:	18 87       	std	Y+8, r17	; 0x08
     c76:	c8 01       	movw	r24, r16
     c78:	b7 01       	movw	r22, r14
     c7a:	0e 94 99 06 	call	0xd32	; 0xd32 <__clzsi2>
     c7e:	fc 01       	movw	r30, r24
     c80:	31 97       	sbiw	r30, 0x01	; 1
     c82:	f7 ff       	sbrs	r31, 7
     c84:	3b c0       	rjmp	.+118    	; 0xcfc <__floatunsisf+0xbc>
     c86:	22 27       	eor	r18, r18
     c88:	33 27       	eor	r19, r19
     c8a:	2e 1b       	sub	r18, r30
     c8c:	3f 0b       	sbc	r19, r31
     c8e:	57 01       	movw	r10, r14
     c90:	68 01       	movw	r12, r16
     c92:	02 2e       	mov	r0, r18
     c94:	04 c0       	rjmp	.+8      	; 0xc9e <__floatunsisf+0x5e>
     c96:	d6 94       	lsr	r13
     c98:	c7 94       	ror	r12
     c9a:	b7 94       	ror	r11
     c9c:	a7 94       	ror	r10
     c9e:	0a 94       	dec	r0
     ca0:	d2 f7       	brpl	.-12     	; 0xc96 <__floatunsisf+0x56>
     ca2:	40 e0       	ldi	r20, 0x00	; 0
     ca4:	50 e0       	ldi	r21, 0x00	; 0
     ca6:	60 e0       	ldi	r22, 0x00	; 0
     ca8:	70 e0       	ldi	r23, 0x00	; 0
     caa:	81 e0       	ldi	r24, 0x01	; 1
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	a0 e0       	ldi	r26, 0x00	; 0
     cb0:	b0 e0       	ldi	r27, 0x00	; 0
     cb2:	04 c0       	rjmp	.+8      	; 0xcbc <__floatunsisf+0x7c>
     cb4:	88 0f       	add	r24, r24
     cb6:	99 1f       	adc	r25, r25
     cb8:	aa 1f       	adc	r26, r26
     cba:	bb 1f       	adc	r27, r27
     cbc:	2a 95       	dec	r18
     cbe:	d2 f7       	brpl	.-12     	; 0xcb4 <__floatunsisf+0x74>
     cc0:	01 97       	sbiw	r24, 0x01	; 1
     cc2:	a1 09       	sbc	r26, r1
     cc4:	b1 09       	sbc	r27, r1
     cc6:	8e 21       	and	r24, r14
     cc8:	9f 21       	and	r25, r15
     cca:	a0 23       	and	r26, r16
     ccc:	b1 23       	and	r27, r17
     cce:	00 97       	sbiw	r24, 0x00	; 0
     cd0:	a1 05       	cpc	r26, r1
     cd2:	b1 05       	cpc	r27, r1
     cd4:	21 f0       	breq	.+8      	; 0xcde <__floatunsisf+0x9e>
     cd6:	41 e0       	ldi	r20, 0x01	; 1
     cd8:	50 e0       	ldi	r21, 0x00	; 0
     cda:	60 e0       	ldi	r22, 0x00	; 0
     cdc:	70 e0       	ldi	r23, 0x00	; 0
     cde:	4a 29       	or	r20, r10
     ce0:	5b 29       	or	r21, r11
     ce2:	6c 29       	or	r22, r12
     ce4:	7d 29       	or	r23, r13
     ce6:	4d 83       	std	Y+5, r20	; 0x05
     ce8:	5e 83       	std	Y+6, r21	; 0x06
     cea:	6f 83       	std	Y+7, r22	; 0x07
     cec:	78 87       	std	Y+8, r23	; 0x08
     cee:	8e e1       	ldi	r24, 0x1E	; 30
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	8e 1b       	sub	r24, r30
     cf4:	9f 0b       	sbc	r25, r31
     cf6:	9c 83       	std	Y+4, r25	; 0x04
     cf8:	8b 83       	std	Y+3, r24	; 0x03
     cfa:	12 c0       	rjmp	.+36     	; 0xd20 <__floatunsisf+0xe0>
     cfc:	30 97       	sbiw	r30, 0x00	; 0
     cfe:	81 f0       	breq	.+32     	; 0xd20 <__floatunsisf+0xe0>
     d00:	0e 2e       	mov	r0, r30
     d02:	04 c0       	rjmp	.+8      	; 0xd0c <__floatunsisf+0xcc>
     d04:	ee 0c       	add	r14, r14
     d06:	ff 1c       	adc	r15, r15
     d08:	00 1f       	adc	r16, r16
     d0a:	11 1f       	adc	r17, r17
     d0c:	0a 94       	dec	r0
     d0e:	d2 f7       	brpl	.-12     	; 0xd04 <__floatunsisf+0xc4>
     d10:	ed 82       	std	Y+5, r14	; 0x05
     d12:	fe 82       	std	Y+6, r15	; 0x06
     d14:	0f 83       	std	Y+7, r16	; 0x07
     d16:	18 87       	std	Y+8, r17	; 0x08
     d18:	ce 1a       	sub	r12, r30
     d1a:	df 0a       	sbc	r13, r31
     d1c:	dc 82       	std	Y+4, r13	; 0x04
     d1e:	cb 82       	std	Y+3, r12	; 0x03
     d20:	1a 82       	std	Y+2, r1	; 0x02
     d22:	ce 01       	movw	r24, r28
     d24:	01 96       	adiw	r24, 0x01	; 1
     d26:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__pack_f>
     d2a:	28 96       	adiw	r28, 0x08	; 8
     d2c:	ea e0       	ldi	r30, 0x0A	; 10
     d2e:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__epilogue_restores__+0x10>

00000d32 <__clzsi2>:
     d32:	ef 92       	push	r14
     d34:	ff 92       	push	r15
     d36:	0f 93       	push	r16
     d38:	1f 93       	push	r17
     d3a:	7b 01       	movw	r14, r22
     d3c:	8c 01       	movw	r16, r24
     d3e:	80 e0       	ldi	r24, 0x00	; 0
     d40:	e8 16       	cp	r14, r24
     d42:	80 e0       	ldi	r24, 0x00	; 0
     d44:	f8 06       	cpc	r15, r24
     d46:	81 e0       	ldi	r24, 0x01	; 1
     d48:	08 07       	cpc	r16, r24
     d4a:	80 e0       	ldi	r24, 0x00	; 0
     d4c:	18 07       	cpc	r17, r24
     d4e:	88 f4       	brcc	.+34     	; 0xd72 <__clzsi2+0x40>
     d50:	8f ef       	ldi	r24, 0xFF	; 255
     d52:	e8 16       	cp	r14, r24
     d54:	f1 04       	cpc	r15, r1
     d56:	01 05       	cpc	r16, r1
     d58:	11 05       	cpc	r17, r1
     d5a:	31 f0       	breq	.+12     	; 0xd68 <__clzsi2+0x36>
     d5c:	28 f0       	brcs	.+10     	; 0xd68 <__clzsi2+0x36>
     d5e:	88 e0       	ldi	r24, 0x08	; 8
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	a0 e0       	ldi	r26, 0x00	; 0
     d64:	b0 e0       	ldi	r27, 0x00	; 0
     d66:	17 c0       	rjmp	.+46     	; 0xd96 <__clzsi2+0x64>
     d68:	80 e0       	ldi	r24, 0x00	; 0
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	a0 e0       	ldi	r26, 0x00	; 0
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	12 c0       	rjmp	.+36     	; 0xd96 <__clzsi2+0x64>
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	e8 16       	cp	r14, r24
     d76:	80 e0       	ldi	r24, 0x00	; 0
     d78:	f8 06       	cpc	r15, r24
     d7a:	80 e0       	ldi	r24, 0x00	; 0
     d7c:	08 07       	cpc	r16, r24
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	18 07       	cpc	r17, r24
     d82:	28 f0       	brcs	.+10     	; 0xd8e <__clzsi2+0x5c>
     d84:	88 e1       	ldi	r24, 0x18	; 24
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	a0 e0       	ldi	r26, 0x00	; 0
     d8a:	b0 e0       	ldi	r27, 0x00	; 0
     d8c:	04 c0       	rjmp	.+8      	; 0xd96 <__clzsi2+0x64>
     d8e:	80 e1       	ldi	r24, 0x10	; 16
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	a0 e0       	ldi	r26, 0x00	; 0
     d94:	b0 e0       	ldi	r27, 0x00	; 0
     d96:	20 e2       	ldi	r18, 0x20	; 32
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	40 e0       	ldi	r20, 0x00	; 0
     d9c:	50 e0       	ldi	r21, 0x00	; 0
     d9e:	28 1b       	sub	r18, r24
     da0:	39 0b       	sbc	r19, r25
     da2:	4a 0b       	sbc	r20, r26
     da4:	5b 0b       	sbc	r21, r27
     da6:	04 c0       	rjmp	.+8      	; 0xdb0 <__clzsi2+0x7e>
     da8:	16 95       	lsr	r17
     daa:	07 95       	ror	r16
     dac:	f7 94       	ror	r15
     dae:	e7 94       	ror	r14
     db0:	8a 95       	dec	r24
     db2:	d2 f7       	brpl	.-12     	; 0xda8 <__clzsi2+0x76>
     db4:	f7 01       	movw	r30, r14
     db6:	ee 54       	subi	r30, 0x4E	; 78
     db8:	ff 4f       	sbci	r31, 0xFF	; 255
     dba:	80 81       	ld	r24, Z
     dbc:	28 1b       	sub	r18, r24
     dbe:	31 09       	sbc	r19, r1
     dc0:	41 09       	sbc	r20, r1
     dc2:	51 09       	sbc	r21, r1
     dc4:	c9 01       	movw	r24, r18
     dc6:	1f 91       	pop	r17
     dc8:	0f 91       	pop	r16
     dca:	ff 90       	pop	r15
     dcc:	ef 90       	pop	r14
     dce:	08 95       	ret

00000dd0 <__pack_f>:
     dd0:	df 92       	push	r13
     dd2:	ef 92       	push	r14
     dd4:	ff 92       	push	r15
     dd6:	0f 93       	push	r16
     dd8:	1f 93       	push	r17
     dda:	fc 01       	movw	r30, r24
     ddc:	e4 80       	ldd	r14, Z+4	; 0x04
     dde:	f5 80       	ldd	r15, Z+5	; 0x05
     de0:	06 81       	ldd	r16, Z+6	; 0x06
     de2:	17 81       	ldd	r17, Z+7	; 0x07
     de4:	d1 80       	ldd	r13, Z+1	; 0x01
     de6:	80 81       	ld	r24, Z
     de8:	82 30       	cpi	r24, 0x02	; 2
     dea:	48 f4       	brcc	.+18     	; 0xdfe <__pack_f+0x2e>
     dec:	80 e0       	ldi	r24, 0x00	; 0
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	a0 e1       	ldi	r26, 0x10	; 16
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	e8 2a       	or	r14, r24
     df6:	f9 2a       	or	r15, r25
     df8:	0a 2b       	or	r16, r26
     dfa:	1b 2b       	or	r17, r27
     dfc:	a5 c0       	rjmp	.+330    	; 0xf48 <__pack_f+0x178>
     dfe:	84 30       	cpi	r24, 0x04	; 4
     e00:	09 f4       	brne	.+2      	; 0xe04 <__pack_f+0x34>
     e02:	9f c0       	rjmp	.+318    	; 0xf42 <__pack_f+0x172>
     e04:	82 30       	cpi	r24, 0x02	; 2
     e06:	21 f4       	brne	.+8      	; 0xe10 <__pack_f+0x40>
     e08:	ee 24       	eor	r14, r14
     e0a:	ff 24       	eor	r15, r15
     e0c:	87 01       	movw	r16, r14
     e0e:	05 c0       	rjmp	.+10     	; 0xe1a <__pack_f+0x4a>
     e10:	e1 14       	cp	r14, r1
     e12:	f1 04       	cpc	r15, r1
     e14:	01 05       	cpc	r16, r1
     e16:	11 05       	cpc	r17, r1
     e18:	19 f4       	brne	.+6      	; 0xe20 <__pack_f+0x50>
     e1a:	e0 e0       	ldi	r30, 0x00	; 0
     e1c:	f0 e0       	ldi	r31, 0x00	; 0
     e1e:	96 c0       	rjmp	.+300    	; 0xf4c <__pack_f+0x17c>
     e20:	62 81       	ldd	r22, Z+2	; 0x02
     e22:	73 81       	ldd	r23, Z+3	; 0x03
     e24:	9f ef       	ldi	r25, 0xFF	; 255
     e26:	62 38       	cpi	r22, 0x82	; 130
     e28:	79 07       	cpc	r23, r25
     e2a:	0c f0       	brlt	.+2      	; 0xe2e <__pack_f+0x5e>
     e2c:	5b c0       	rjmp	.+182    	; 0xee4 <__pack_f+0x114>
     e2e:	22 e8       	ldi	r18, 0x82	; 130
     e30:	3f ef       	ldi	r19, 0xFF	; 255
     e32:	26 1b       	sub	r18, r22
     e34:	37 0b       	sbc	r19, r23
     e36:	2a 31       	cpi	r18, 0x1A	; 26
     e38:	31 05       	cpc	r19, r1
     e3a:	2c f0       	brlt	.+10     	; 0xe46 <__pack_f+0x76>
     e3c:	20 e0       	ldi	r18, 0x00	; 0
     e3e:	30 e0       	ldi	r19, 0x00	; 0
     e40:	40 e0       	ldi	r20, 0x00	; 0
     e42:	50 e0       	ldi	r21, 0x00	; 0
     e44:	2a c0       	rjmp	.+84     	; 0xe9a <__pack_f+0xca>
     e46:	b8 01       	movw	r22, r16
     e48:	a7 01       	movw	r20, r14
     e4a:	02 2e       	mov	r0, r18
     e4c:	04 c0       	rjmp	.+8      	; 0xe56 <__pack_f+0x86>
     e4e:	76 95       	lsr	r23
     e50:	67 95       	ror	r22
     e52:	57 95       	ror	r21
     e54:	47 95       	ror	r20
     e56:	0a 94       	dec	r0
     e58:	d2 f7       	brpl	.-12     	; 0xe4e <__pack_f+0x7e>
     e5a:	81 e0       	ldi	r24, 0x01	; 1
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	a0 e0       	ldi	r26, 0x00	; 0
     e60:	b0 e0       	ldi	r27, 0x00	; 0
     e62:	04 c0       	rjmp	.+8      	; 0xe6c <__pack_f+0x9c>
     e64:	88 0f       	add	r24, r24
     e66:	99 1f       	adc	r25, r25
     e68:	aa 1f       	adc	r26, r26
     e6a:	bb 1f       	adc	r27, r27
     e6c:	2a 95       	dec	r18
     e6e:	d2 f7       	brpl	.-12     	; 0xe64 <__pack_f+0x94>
     e70:	01 97       	sbiw	r24, 0x01	; 1
     e72:	a1 09       	sbc	r26, r1
     e74:	b1 09       	sbc	r27, r1
     e76:	8e 21       	and	r24, r14
     e78:	9f 21       	and	r25, r15
     e7a:	a0 23       	and	r26, r16
     e7c:	b1 23       	and	r27, r17
     e7e:	00 97       	sbiw	r24, 0x00	; 0
     e80:	a1 05       	cpc	r26, r1
     e82:	b1 05       	cpc	r27, r1
     e84:	21 f0       	breq	.+8      	; 0xe8e <__pack_f+0xbe>
     e86:	81 e0       	ldi	r24, 0x01	; 1
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	a0 e0       	ldi	r26, 0x00	; 0
     e8c:	b0 e0       	ldi	r27, 0x00	; 0
     e8e:	9a 01       	movw	r18, r20
     e90:	ab 01       	movw	r20, r22
     e92:	28 2b       	or	r18, r24
     e94:	39 2b       	or	r19, r25
     e96:	4a 2b       	or	r20, r26
     e98:	5b 2b       	or	r21, r27
     e9a:	da 01       	movw	r26, r20
     e9c:	c9 01       	movw	r24, r18
     e9e:	8f 77       	andi	r24, 0x7F	; 127
     ea0:	90 70       	andi	r25, 0x00	; 0
     ea2:	a0 70       	andi	r26, 0x00	; 0
     ea4:	b0 70       	andi	r27, 0x00	; 0
     ea6:	80 34       	cpi	r24, 0x40	; 64
     ea8:	91 05       	cpc	r25, r1
     eaa:	a1 05       	cpc	r26, r1
     eac:	b1 05       	cpc	r27, r1
     eae:	39 f4       	brne	.+14     	; 0xebe <__pack_f+0xee>
     eb0:	27 ff       	sbrs	r18, 7
     eb2:	09 c0       	rjmp	.+18     	; 0xec6 <__pack_f+0xf6>
     eb4:	20 5c       	subi	r18, 0xC0	; 192
     eb6:	3f 4f       	sbci	r19, 0xFF	; 255
     eb8:	4f 4f       	sbci	r20, 0xFF	; 255
     eba:	5f 4f       	sbci	r21, 0xFF	; 255
     ebc:	04 c0       	rjmp	.+8      	; 0xec6 <__pack_f+0xf6>
     ebe:	21 5c       	subi	r18, 0xC1	; 193
     ec0:	3f 4f       	sbci	r19, 0xFF	; 255
     ec2:	4f 4f       	sbci	r20, 0xFF	; 255
     ec4:	5f 4f       	sbci	r21, 0xFF	; 255
     ec6:	e0 e0       	ldi	r30, 0x00	; 0
     ec8:	f0 e0       	ldi	r31, 0x00	; 0
     eca:	20 30       	cpi	r18, 0x00	; 0
     ecc:	a0 e0       	ldi	r26, 0x00	; 0
     ece:	3a 07       	cpc	r19, r26
     ed0:	a0 e0       	ldi	r26, 0x00	; 0
     ed2:	4a 07       	cpc	r20, r26
     ed4:	a0 e4       	ldi	r26, 0x40	; 64
     ed6:	5a 07       	cpc	r21, r26
     ed8:	10 f0       	brcs	.+4      	; 0xede <__pack_f+0x10e>
     eda:	e1 e0       	ldi	r30, 0x01	; 1
     edc:	f0 e0       	ldi	r31, 0x00	; 0
     ede:	79 01       	movw	r14, r18
     ee0:	8a 01       	movw	r16, r20
     ee2:	27 c0       	rjmp	.+78     	; 0xf32 <__pack_f+0x162>
     ee4:	60 38       	cpi	r22, 0x80	; 128
     ee6:	71 05       	cpc	r23, r1
     ee8:	64 f5       	brge	.+88     	; 0xf42 <__pack_f+0x172>
     eea:	fb 01       	movw	r30, r22
     eec:	e1 58       	subi	r30, 0x81	; 129
     eee:	ff 4f       	sbci	r31, 0xFF	; 255
     ef0:	d8 01       	movw	r26, r16
     ef2:	c7 01       	movw	r24, r14
     ef4:	8f 77       	andi	r24, 0x7F	; 127
     ef6:	90 70       	andi	r25, 0x00	; 0
     ef8:	a0 70       	andi	r26, 0x00	; 0
     efa:	b0 70       	andi	r27, 0x00	; 0
     efc:	80 34       	cpi	r24, 0x40	; 64
     efe:	91 05       	cpc	r25, r1
     f00:	a1 05       	cpc	r26, r1
     f02:	b1 05       	cpc	r27, r1
     f04:	39 f4       	brne	.+14     	; 0xf14 <__pack_f+0x144>
     f06:	e7 fe       	sbrs	r14, 7
     f08:	0d c0       	rjmp	.+26     	; 0xf24 <__pack_f+0x154>
     f0a:	80 e4       	ldi	r24, 0x40	; 64
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	a0 e0       	ldi	r26, 0x00	; 0
     f10:	b0 e0       	ldi	r27, 0x00	; 0
     f12:	04 c0       	rjmp	.+8      	; 0xf1c <__pack_f+0x14c>
     f14:	8f e3       	ldi	r24, 0x3F	; 63
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	a0 e0       	ldi	r26, 0x00	; 0
     f1a:	b0 e0       	ldi	r27, 0x00	; 0
     f1c:	e8 0e       	add	r14, r24
     f1e:	f9 1e       	adc	r15, r25
     f20:	0a 1f       	adc	r16, r26
     f22:	1b 1f       	adc	r17, r27
     f24:	17 ff       	sbrs	r17, 7
     f26:	05 c0       	rjmp	.+10     	; 0xf32 <__pack_f+0x162>
     f28:	16 95       	lsr	r17
     f2a:	07 95       	ror	r16
     f2c:	f7 94       	ror	r15
     f2e:	e7 94       	ror	r14
     f30:	31 96       	adiw	r30, 0x01	; 1
     f32:	87 e0       	ldi	r24, 0x07	; 7
     f34:	16 95       	lsr	r17
     f36:	07 95       	ror	r16
     f38:	f7 94       	ror	r15
     f3a:	e7 94       	ror	r14
     f3c:	8a 95       	dec	r24
     f3e:	d1 f7       	brne	.-12     	; 0xf34 <__pack_f+0x164>
     f40:	05 c0       	rjmp	.+10     	; 0xf4c <__pack_f+0x17c>
     f42:	ee 24       	eor	r14, r14
     f44:	ff 24       	eor	r15, r15
     f46:	87 01       	movw	r16, r14
     f48:	ef ef       	ldi	r30, 0xFF	; 255
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	6e 2f       	mov	r22, r30
     f4e:	67 95       	ror	r22
     f50:	66 27       	eor	r22, r22
     f52:	67 95       	ror	r22
     f54:	90 2f       	mov	r25, r16
     f56:	9f 77       	andi	r25, 0x7F	; 127
     f58:	d7 94       	ror	r13
     f5a:	dd 24       	eor	r13, r13
     f5c:	d7 94       	ror	r13
     f5e:	8e 2f       	mov	r24, r30
     f60:	86 95       	lsr	r24
     f62:	49 2f       	mov	r20, r25
     f64:	46 2b       	or	r20, r22
     f66:	58 2f       	mov	r21, r24
     f68:	5d 29       	or	r21, r13
     f6a:	b7 01       	movw	r22, r14
     f6c:	ca 01       	movw	r24, r20
     f6e:	1f 91       	pop	r17
     f70:	0f 91       	pop	r16
     f72:	ff 90       	pop	r15
     f74:	ef 90       	pop	r14
     f76:	df 90       	pop	r13
     f78:	08 95       	ret

00000f7a <__unpack_f>:
     f7a:	fc 01       	movw	r30, r24
     f7c:	db 01       	movw	r26, r22
     f7e:	40 81       	ld	r20, Z
     f80:	51 81       	ldd	r21, Z+1	; 0x01
     f82:	22 81       	ldd	r18, Z+2	; 0x02
     f84:	62 2f       	mov	r22, r18
     f86:	6f 77       	andi	r22, 0x7F	; 127
     f88:	70 e0       	ldi	r23, 0x00	; 0
     f8a:	22 1f       	adc	r18, r18
     f8c:	22 27       	eor	r18, r18
     f8e:	22 1f       	adc	r18, r18
     f90:	93 81       	ldd	r25, Z+3	; 0x03
     f92:	89 2f       	mov	r24, r25
     f94:	88 0f       	add	r24, r24
     f96:	82 2b       	or	r24, r18
     f98:	28 2f       	mov	r18, r24
     f9a:	30 e0       	ldi	r19, 0x00	; 0
     f9c:	99 1f       	adc	r25, r25
     f9e:	99 27       	eor	r25, r25
     fa0:	99 1f       	adc	r25, r25
     fa2:	11 96       	adiw	r26, 0x01	; 1
     fa4:	9c 93       	st	X, r25
     fa6:	11 97       	sbiw	r26, 0x01	; 1
     fa8:	21 15       	cp	r18, r1
     faa:	31 05       	cpc	r19, r1
     fac:	a9 f5       	brne	.+106    	; 0x1018 <__unpack_f+0x9e>
     fae:	41 15       	cp	r20, r1
     fb0:	51 05       	cpc	r21, r1
     fb2:	61 05       	cpc	r22, r1
     fb4:	71 05       	cpc	r23, r1
     fb6:	11 f4       	brne	.+4      	; 0xfbc <__unpack_f+0x42>
     fb8:	82 e0       	ldi	r24, 0x02	; 2
     fba:	37 c0       	rjmp	.+110    	; 0x102a <__unpack_f+0xb0>
     fbc:	82 e8       	ldi	r24, 0x82	; 130
     fbe:	9f ef       	ldi	r25, 0xFF	; 255
     fc0:	13 96       	adiw	r26, 0x03	; 3
     fc2:	9c 93       	st	X, r25
     fc4:	8e 93       	st	-X, r24
     fc6:	12 97       	sbiw	r26, 0x02	; 2
     fc8:	9a 01       	movw	r18, r20
     fca:	ab 01       	movw	r20, r22
     fcc:	67 e0       	ldi	r22, 0x07	; 7
     fce:	22 0f       	add	r18, r18
     fd0:	33 1f       	adc	r19, r19
     fd2:	44 1f       	adc	r20, r20
     fd4:	55 1f       	adc	r21, r21
     fd6:	6a 95       	dec	r22
     fd8:	d1 f7       	brne	.-12     	; 0xfce <__unpack_f+0x54>
     fda:	83 e0       	ldi	r24, 0x03	; 3
     fdc:	8c 93       	st	X, r24
     fde:	0d c0       	rjmp	.+26     	; 0xffa <__unpack_f+0x80>
     fe0:	22 0f       	add	r18, r18
     fe2:	33 1f       	adc	r19, r19
     fe4:	44 1f       	adc	r20, r20
     fe6:	55 1f       	adc	r21, r21
     fe8:	12 96       	adiw	r26, 0x02	; 2
     fea:	8d 91       	ld	r24, X+
     fec:	9c 91       	ld	r25, X
     fee:	13 97       	sbiw	r26, 0x03	; 3
     ff0:	01 97       	sbiw	r24, 0x01	; 1
     ff2:	13 96       	adiw	r26, 0x03	; 3
     ff4:	9c 93       	st	X, r25
     ff6:	8e 93       	st	-X, r24
     ff8:	12 97       	sbiw	r26, 0x02	; 2
     ffa:	20 30       	cpi	r18, 0x00	; 0
     ffc:	80 e0       	ldi	r24, 0x00	; 0
     ffe:	38 07       	cpc	r19, r24
    1000:	80 e0       	ldi	r24, 0x00	; 0
    1002:	48 07       	cpc	r20, r24
    1004:	80 e4       	ldi	r24, 0x40	; 64
    1006:	58 07       	cpc	r21, r24
    1008:	58 f3       	brcs	.-42     	; 0xfe0 <__unpack_f+0x66>
    100a:	14 96       	adiw	r26, 0x04	; 4
    100c:	2d 93       	st	X+, r18
    100e:	3d 93       	st	X+, r19
    1010:	4d 93       	st	X+, r20
    1012:	5c 93       	st	X, r21
    1014:	17 97       	sbiw	r26, 0x07	; 7
    1016:	08 95       	ret
    1018:	2f 3f       	cpi	r18, 0xFF	; 255
    101a:	31 05       	cpc	r19, r1
    101c:	79 f4       	brne	.+30     	; 0x103c <__unpack_f+0xc2>
    101e:	41 15       	cp	r20, r1
    1020:	51 05       	cpc	r21, r1
    1022:	61 05       	cpc	r22, r1
    1024:	71 05       	cpc	r23, r1
    1026:	19 f4       	brne	.+6      	; 0x102e <__unpack_f+0xb4>
    1028:	84 e0       	ldi	r24, 0x04	; 4
    102a:	8c 93       	st	X, r24
    102c:	08 95       	ret
    102e:	64 ff       	sbrs	r22, 4
    1030:	03 c0       	rjmp	.+6      	; 0x1038 <__unpack_f+0xbe>
    1032:	81 e0       	ldi	r24, 0x01	; 1
    1034:	8c 93       	st	X, r24
    1036:	12 c0       	rjmp	.+36     	; 0x105c <__unpack_f+0xe2>
    1038:	1c 92       	st	X, r1
    103a:	10 c0       	rjmp	.+32     	; 0x105c <__unpack_f+0xe2>
    103c:	2f 57       	subi	r18, 0x7F	; 127
    103e:	30 40       	sbci	r19, 0x00	; 0
    1040:	13 96       	adiw	r26, 0x03	; 3
    1042:	3c 93       	st	X, r19
    1044:	2e 93       	st	-X, r18
    1046:	12 97       	sbiw	r26, 0x02	; 2
    1048:	83 e0       	ldi	r24, 0x03	; 3
    104a:	8c 93       	st	X, r24
    104c:	87 e0       	ldi	r24, 0x07	; 7
    104e:	44 0f       	add	r20, r20
    1050:	55 1f       	adc	r21, r21
    1052:	66 1f       	adc	r22, r22
    1054:	77 1f       	adc	r23, r23
    1056:	8a 95       	dec	r24
    1058:	d1 f7       	brne	.-12     	; 0x104e <__unpack_f+0xd4>
    105a:	70 64       	ori	r23, 0x40	; 64
    105c:	14 96       	adiw	r26, 0x04	; 4
    105e:	4d 93       	st	X+, r20
    1060:	5d 93       	st	X+, r21
    1062:	6d 93       	st	X+, r22
    1064:	7c 93       	st	X, r23
    1066:	17 97       	sbiw	r26, 0x07	; 7
    1068:	08 95       	ret

0000106a <__fpcmp_parts_f>:
    106a:	1f 93       	push	r17
    106c:	dc 01       	movw	r26, r24
    106e:	fb 01       	movw	r30, r22
    1070:	9c 91       	ld	r25, X
    1072:	92 30       	cpi	r25, 0x02	; 2
    1074:	08 f4       	brcc	.+2      	; 0x1078 <__fpcmp_parts_f+0xe>
    1076:	47 c0       	rjmp	.+142    	; 0x1106 <__fpcmp_parts_f+0x9c>
    1078:	80 81       	ld	r24, Z
    107a:	82 30       	cpi	r24, 0x02	; 2
    107c:	08 f4       	brcc	.+2      	; 0x1080 <__fpcmp_parts_f+0x16>
    107e:	43 c0       	rjmp	.+134    	; 0x1106 <__fpcmp_parts_f+0x9c>
    1080:	94 30       	cpi	r25, 0x04	; 4
    1082:	51 f4       	brne	.+20     	; 0x1098 <__fpcmp_parts_f+0x2e>
    1084:	11 96       	adiw	r26, 0x01	; 1
    1086:	1c 91       	ld	r17, X
    1088:	84 30       	cpi	r24, 0x04	; 4
    108a:	99 f5       	brne	.+102    	; 0x10f2 <__fpcmp_parts_f+0x88>
    108c:	81 81       	ldd	r24, Z+1	; 0x01
    108e:	68 2f       	mov	r22, r24
    1090:	70 e0       	ldi	r23, 0x00	; 0
    1092:	61 1b       	sub	r22, r17
    1094:	71 09       	sbc	r23, r1
    1096:	3f c0       	rjmp	.+126    	; 0x1116 <__fpcmp_parts_f+0xac>
    1098:	84 30       	cpi	r24, 0x04	; 4
    109a:	21 f0       	breq	.+8      	; 0x10a4 <__fpcmp_parts_f+0x3a>
    109c:	92 30       	cpi	r25, 0x02	; 2
    109e:	31 f4       	brne	.+12     	; 0x10ac <__fpcmp_parts_f+0x42>
    10a0:	82 30       	cpi	r24, 0x02	; 2
    10a2:	b9 f1       	breq	.+110    	; 0x1112 <__fpcmp_parts_f+0xa8>
    10a4:	81 81       	ldd	r24, Z+1	; 0x01
    10a6:	88 23       	and	r24, r24
    10a8:	89 f1       	breq	.+98     	; 0x110c <__fpcmp_parts_f+0xa2>
    10aa:	2d c0       	rjmp	.+90     	; 0x1106 <__fpcmp_parts_f+0x9c>
    10ac:	11 96       	adiw	r26, 0x01	; 1
    10ae:	1c 91       	ld	r17, X
    10b0:	11 97       	sbiw	r26, 0x01	; 1
    10b2:	82 30       	cpi	r24, 0x02	; 2
    10b4:	f1 f0       	breq	.+60     	; 0x10f2 <__fpcmp_parts_f+0x88>
    10b6:	81 81       	ldd	r24, Z+1	; 0x01
    10b8:	18 17       	cp	r17, r24
    10ba:	d9 f4       	brne	.+54     	; 0x10f2 <__fpcmp_parts_f+0x88>
    10bc:	12 96       	adiw	r26, 0x02	; 2
    10be:	2d 91       	ld	r18, X+
    10c0:	3c 91       	ld	r19, X
    10c2:	13 97       	sbiw	r26, 0x03	; 3
    10c4:	82 81       	ldd	r24, Z+2	; 0x02
    10c6:	93 81       	ldd	r25, Z+3	; 0x03
    10c8:	82 17       	cp	r24, r18
    10ca:	93 07       	cpc	r25, r19
    10cc:	94 f0       	brlt	.+36     	; 0x10f2 <__fpcmp_parts_f+0x88>
    10ce:	28 17       	cp	r18, r24
    10d0:	39 07       	cpc	r19, r25
    10d2:	bc f0       	brlt	.+46     	; 0x1102 <__fpcmp_parts_f+0x98>
    10d4:	14 96       	adiw	r26, 0x04	; 4
    10d6:	8d 91       	ld	r24, X+
    10d8:	9d 91       	ld	r25, X+
    10da:	0d 90       	ld	r0, X+
    10dc:	bc 91       	ld	r27, X
    10de:	a0 2d       	mov	r26, r0
    10e0:	24 81       	ldd	r18, Z+4	; 0x04
    10e2:	35 81       	ldd	r19, Z+5	; 0x05
    10e4:	46 81       	ldd	r20, Z+6	; 0x06
    10e6:	57 81       	ldd	r21, Z+7	; 0x07
    10e8:	28 17       	cp	r18, r24
    10ea:	39 07       	cpc	r19, r25
    10ec:	4a 07       	cpc	r20, r26
    10ee:	5b 07       	cpc	r21, r27
    10f0:	18 f4       	brcc	.+6      	; 0x10f8 <__fpcmp_parts_f+0x8e>
    10f2:	11 23       	and	r17, r17
    10f4:	41 f0       	breq	.+16     	; 0x1106 <__fpcmp_parts_f+0x9c>
    10f6:	0a c0       	rjmp	.+20     	; 0x110c <__fpcmp_parts_f+0xa2>
    10f8:	82 17       	cp	r24, r18
    10fa:	93 07       	cpc	r25, r19
    10fc:	a4 07       	cpc	r26, r20
    10fe:	b5 07       	cpc	r27, r21
    1100:	40 f4       	brcc	.+16     	; 0x1112 <__fpcmp_parts_f+0xa8>
    1102:	11 23       	and	r17, r17
    1104:	19 f0       	breq	.+6      	; 0x110c <__fpcmp_parts_f+0xa2>
    1106:	61 e0       	ldi	r22, 0x01	; 1
    1108:	70 e0       	ldi	r23, 0x00	; 0
    110a:	05 c0       	rjmp	.+10     	; 0x1116 <__fpcmp_parts_f+0xac>
    110c:	6f ef       	ldi	r22, 0xFF	; 255
    110e:	7f ef       	ldi	r23, 0xFF	; 255
    1110:	02 c0       	rjmp	.+4      	; 0x1116 <__fpcmp_parts_f+0xac>
    1112:	60 e0       	ldi	r22, 0x00	; 0
    1114:	70 e0       	ldi	r23, 0x00	; 0
    1116:	cb 01       	movw	r24, r22
    1118:	1f 91       	pop	r17
    111a:	08 95       	ret

0000111c <__prologue_saves__>:
    111c:	2f 92       	push	r2
    111e:	3f 92       	push	r3
    1120:	4f 92       	push	r4
    1122:	5f 92       	push	r5
    1124:	6f 92       	push	r6
    1126:	7f 92       	push	r7
    1128:	8f 92       	push	r8
    112a:	9f 92       	push	r9
    112c:	af 92       	push	r10
    112e:	bf 92       	push	r11
    1130:	cf 92       	push	r12
    1132:	df 92       	push	r13
    1134:	ef 92       	push	r14
    1136:	ff 92       	push	r15
    1138:	0f 93       	push	r16
    113a:	1f 93       	push	r17
    113c:	cf 93       	push	r28
    113e:	df 93       	push	r29
    1140:	cd b7       	in	r28, 0x3d	; 61
    1142:	de b7       	in	r29, 0x3e	; 62
    1144:	ca 1b       	sub	r28, r26
    1146:	db 0b       	sbc	r29, r27
    1148:	0f b6       	in	r0, 0x3f	; 63
    114a:	f8 94       	cli
    114c:	de bf       	out	0x3e, r29	; 62
    114e:	0f be       	out	0x3f, r0	; 63
    1150:	cd bf       	out	0x3d, r28	; 61
    1152:	09 94       	ijmp

00001154 <__epilogue_restores__>:
    1154:	2a 88       	ldd	r2, Y+18	; 0x12
    1156:	39 88       	ldd	r3, Y+17	; 0x11
    1158:	48 88       	ldd	r4, Y+16	; 0x10
    115a:	5f 84       	ldd	r5, Y+15	; 0x0f
    115c:	6e 84       	ldd	r6, Y+14	; 0x0e
    115e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1160:	8c 84       	ldd	r8, Y+12	; 0x0c
    1162:	9b 84       	ldd	r9, Y+11	; 0x0b
    1164:	aa 84       	ldd	r10, Y+10	; 0x0a
    1166:	b9 84       	ldd	r11, Y+9	; 0x09
    1168:	c8 84       	ldd	r12, Y+8	; 0x08
    116a:	df 80       	ldd	r13, Y+7	; 0x07
    116c:	ee 80       	ldd	r14, Y+6	; 0x06
    116e:	fd 80       	ldd	r15, Y+5	; 0x05
    1170:	0c 81       	ldd	r16, Y+4	; 0x04
    1172:	1b 81       	ldd	r17, Y+3	; 0x03
    1174:	aa 81       	ldd	r26, Y+2	; 0x02
    1176:	b9 81       	ldd	r27, Y+1	; 0x01
    1178:	ce 0f       	add	r28, r30
    117a:	d1 1d       	adc	r29, r1
    117c:	0f b6       	in	r0, 0x3f	; 63
    117e:	f8 94       	cli
    1180:	de bf       	out	0x3e, r29	; 62
    1182:	0f be       	out	0x3f, r0	; 63
    1184:	cd bf       	out	0x3d, r28	; 61
    1186:	ed 01       	movw	r28, r26
    1188:	08 95       	ret

0000118a <printf>:
    118a:	a0 e0       	ldi	r26, 0x00	; 0
    118c:	b0 e0       	ldi	r27, 0x00	; 0
    118e:	eb ec       	ldi	r30, 0xCB	; 203
    1190:	f8 e0       	ldi	r31, 0x08	; 8
    1192:	0c 94 9e 08 	jmp	0x113c	; 0x113c <__prologue_saves__+0x20>
    1196:	fe 01       	movw	r30, r28
    1198:	35 96       	adiw	r30, 0x05	; 5
    119a:	61 91       	ld	r22, Z+
    119c:	71 91       	ld	r23, Z+
    119e:	80 91 b9 01 	lds	r24, 0x01B9
    11a2:	90 91 ba 01 	lds	r25, 0x01BA
    11a6:	af 01       	movw	r20, r30
    11a8:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <vfprintf>
    11ac:	20 96       	adiw	r28, 0x00	; 0
    11ae:	e2 e0       	ldi	r30, 0x02	; 2
    11b0:	0c 94 ba 08 	jmp	0x1174	; 0x1174 <__epilogue_restores__+0x20>

000011b4 <putchar>:
    11b4:	60 91 b9 01 	lds	r22, 0x01B9
    11b8:	70 91 ba 01 	lds	r23, 0x01BA
    11bc:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <fputc>
    11c0:	08 95       	ret

000011c2 <vfprintf>:
    11c2:	ab e0       	ldi	r26, 0x0B	; 11
    11c4:	b0 e0       	ldi	r27, 0x00	; 0
    11c6:	e7 ee       	ldi	r30, 0xE7	; 231
    11c8:	f8 e0       	ldi	r31, 0x08	; 8
    11ca:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__prologue_saves__>
    11ce:	3c 01       	movw	r6, r24
    11d0:	2b 01       	movw	r4, r22
    11d2:	5a 01       	movw	r10, r20
    11d4:	fc 01       	movw	r30, r24
    11d6:	17 82       	std	Z+7, r1	; 0x07
    11d8:	16 82       	std	Z+6, r1	; 0x06
    11da:	83 81       	ldd	r24, Z+3	; 0x03
    11dc:	81 fd       	sbrc	r24, 1
    11de:	03 c0       	rjmp	.+6      	; 0x11e6 <vfprintf+0x24>
    11e0:	6f ef       	ldi	r22, 0xFF	; 255
    11e2:	7f ef       	ldi	r23, 0xFF	; 255
    11e4:	c6 c1       	rjmp	.+908    	; 0x1572 <vfprintf+0x3b0>
    11e6:	9a e0       	ldi	r25, 0x0A	; 10
    11e8:	89 2e       	mov	r8, r25
    11ea:	1e 01       	movw	r2, r28
    11ec:	08 94       	sec
    11ee:	21 1c       	adc	r2, r1
    11f0:	31 1c       	adc	r3, r1
    11f2:	f3 01       	movw	r30, r6
    11f4:	23 81       	ldd	r18, Z+3	; 0x03
    11f6:	f2 01       	movw	r30, r4
    11f8:	23 fd       	sbrc	r18, 3
    11fa:	85 91       	lpm	r24, Z+
    11fc:	23 ff       	sbrs	r18, 3
    11fe:	81 91       	ld	r24, Z+
    1200:	2f 01       	movw	r4, r30
    1202:	88 23       	and	r24, r24
    1204:	09 f4       	brne	.+2      	; 0x1208 <vfprintf+0x46>
    1206:	b2 c1       	rjmp	.+868    	; 0x156c <vfprintf+0x3aa>
    1208:	85 32       	cpi	r24, 0x25	; 37
    120a:	39 f4       	brne	.+14     	; 0x121a <vfprintf+0x58>
    120c:	23 fd       	sbrc	r18, 3
    120e:	85 91       	lpm	r24, Z+
    1210:	23 ff       	sbrs	r18, 3
    1212:	81 91       	ld	r24, Z+
    1214:	2f 01       	movw	r4, r30
    1216:	85 32       	cpi	r24, 0x25	; 37
    1218:	29 f4       	brne	.+10     	; 0x1224 <vfprintf+0x62>
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	b3 01       	movw	r22, r6
    121e:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <fputc>
    1222:	e7 cf       	rjmp	.-50     	; 0x11f2 <vfprintf+0x30>
    1224:	98 2f       	mov	r25, r24
    1226:	ff 24       	eor	r15, r15
    1228:	ee 24       	eor	r14, r14
    122a:	99 24       	eor	r9, r9
    122c:	ff e1       	ldi	r31, 0x1F	; 31
    122e:	ff 15       	cp	r31, r15
    1230:	d0 f0       	brcs	.+52     	; 0x1266 <vfprintf+0xa4>
    1232:	9b 32       	cpi	r25, 0x2B	; 43
    1234:	69 f0       	breq	.+26     	; 0x1250 <vfprintf+0x8e>
    1236:	9c 32       	cpi	r25, 0x2C	; 44
    1238:	28 f4       	brcc	.+10     	; 0x1244 <vfprintf+0x82>
    123a:	90 32       	cpi	r25, 0x20	; 32
    123c:	59 f0       	breq	.+22     	; 0x1254 <vfprintf+0x92>
    123e:	93 32       	cpi	r25, 0x23	; 35
    1240:	91 f4       	brne	.+36     	; 0x1266 <vfprintf+0xa4>
    1242:	0e c0       	rjmp	.+28     	; 0x1260 <vfprintf+0x9e>
    1244:	9d 32       	cpi	r25, 0x2D	; 45
    1246:	49 f0       	breq	.+18     	; 0x125a <vfprintf+0x98>
    1248:	90 33       	cpi	r25, 0x30	; 48
    124a:	69 f4       	brne	.+26     	; 0x1266 <vfprintf+0xa4>
    124c:	41 e0       	ldi	r20, 0x01	; 1
    124e:	24 c0       	rjmp	.+72     	; 0x1298 <vfprintf+0xd6>
    1250:	52 e0       	ldi	r21, 0x02	; 2
    1252:	f5 2a       	or	r15, r21
    1254:	84 e0       	ldi	r24, 0x04	; 4
    1256:	f8 2a       	or	r15, r24
    1258:	28 c0       	rjmp	.+80     	; 0x12aa <vfprintf+0xe8>
    125a:	98 e0       	ldi	r25, 0x08	; 8
    125c:	f9 2a       	or	r15, r25
    125e:	25 c0       	rjmp	.+74     	; 0x12aa <vfprintf+0xe8>
    1260:	e0 e1       	ldi	r30, 0x10	; 16
    1262:	fe 2a       	or	r15, r30
    1264:	22 c0       	rjmp	.+68     	; 0x12aa <vfprintf+0xe8>
    1266:	f7 fc       	sbrc	r15, 7
    1268:	29 c0       	rjmp	.+82     	; 0x12bc <vfprintf+0xfa>
    126a:	89 2f       	mov	r24, r25
    126c:	80 53       	subi	r24, 0x30	; 48
    126e:	8a 30       	cpi	r24, 0x0A	; 10
    1270:	70 f4       	brcc	.+28     	; 0x128e <vfprintf+0xcc>
    1272:	f6 fe       	sbrs	r15, 6
    1274:	05 c0       	rjmp	.+10     	; 0x1280 <vfprintf+0xbe>
    1276:	98 9c       	mul	r9, r8
    1278:	90 2c       	mov	r9, r0
    127a:	11 24       	eor	r1, r1
    127c:	98 0e       	add	r9, r24
    127e:	15 c0       	rjmp	.+42     	; 0x12aa <vfprintf+0xe8>
    1280:	e8 9c       	mul	r14, r8
    1282:	e0 2c       	mov	r14, r0
    1284:	11 24       	eor	r1, r1
    1286:	e8 0e       	add	r14, r24
    1288:	f0 e2       	ldi	r31, 0x20	; 32
    128a:	ff 2a       	or	r15, r31
    128c:	0e c0       	rjmp	.+28     	; 0x12aa <vfprintf+0xe8>
    128e:	9e 32       	cpi	r25, 0x2E	; 46
    1290:	29 f4       	brne	.+10     	; 0x129c <vfprintf+0xda>
    1292:	f6 fc       	sbrc	r15, 6
    1294:	6b c1       	rjmp	.+726    	; 0x156c <vfprintf+0x3aa>
    1296:	40 e4       	ldi	r20, 0x40	; 64
    1298:	f4 2a       	or	r15, r20
    129a:	07 c0       	rjmp	.+14     	; 0x12aa <vfprintf+0xe8>
    129c:	9c 36       	cpi	r25, 0x6C	; 108
    129e:	19 f4       	brne	.+6      	; 0x12a6 <vfprintf+0xe4>
    12a0:	50 e8       	ldi	r21, 0x80	; 128
    12a2:	f5 2a       	or	r15, r21
    12a4:	02 c0       	rjmp	.+4      	; 0x12aa <vfprintf+0xe8>
    12a6:	98 36       	cpi	r25, 0x68	; 104
    12a8:	49 f4       	brne	.+18     	; 0x12bc <vfprintf+0xfa>
    12aa:	f2 01       	movw	r30, r4
    12ac:	23 fd       	sbrc	r18, 3
    12ae:	95 91       	lpm	r25, Z+
    12b0:	23 ff       	sbrs	r18, 3
    12b2:	91 91       	ld	r25, Z+
    12b4:	2f 01       	movw	r4, r30
    12b6:	99 23       	and	r25, r25
    12b8:	09 f0       	breq	.+2      	; 0x12bc <vfprintf+0xfa>
    12ba:	b8 cf       	rjmp	.-144    	; 0x122c <vfprintf+0x6a>
    12bc:	89 2f       	mov	r24, r25
    12be:	85 54       	subi	r24, 0x45	; 69
    12c0:	83 30       	cpi	r24, 0x03	; 3
    12c2:	18 f0       	brcs	.+6      	; 0x12ca <vfprintf+0x108>
    12c4:	80 52       	subi	r24, 0x20	; 32
    12c6:	83 30       	cpi	r24, 0x03	; 3
    12c8:	38 f4       	brcc	.+14     	; 0x12d8 <vfprintf+0x116>
    12ca:	44 e0       	ldi	r20, 0x04	; 4
    12cc:	50 e0       	ldi	r21, 0x00	; 0
    12ce:	a4 0e       	add	r10, r20
    12d0:	b5 1e       	adc	r11, r21
    12d2:	5f e3       	ldi	r21, 0x3F	; 63
    12d4:	59 83       	std	Y+1, r21	; 0x01
    12d6:	0f c0       	rjmp	.+30     	; 0x12f6 <vfprintf+0x134>
    12d8:	93 36       	cpi	r25, 0x63	; 99
    12da:	31 f0       	breq	.+12     	; 0x12e8 <vfprintf+0x126>
    12dc:	93 37       	cpi	r25, 0x73	; 115
    12de:	79 f0       	breq	.+30     	; 0x12fe <vfprintf+0x13c>
    12e0:	93 35       	cpi	r25, 0x53	; 83
    12e2:	09 f0       	breq	.+2      	; 0x12e6 <vfprintf+0x124>
    12e4:	56 c0       	rjmp	.+172    	; 0x1392 <vfprintf+0x1d0>
    12e6:	20 c0       	rjmp	.+64     	; 0x1328 <vfprintf+0x166>
    12e8:	f5 01       	movw	r30, r10
    12ea:	80 81       	ld	r24, Z
    12ec:	89 83       	std	Y+1, r24	; 0x01
    12ee:	42 e0       	ldi	r20, 0x02	; 2
    12f0:	50 e0       	ldi	r21, 0x00	; 0
    12f2:	a4 0e       	add	r10, r20
    12f4:	b5 1e       	adc	r11, r21
    12f6:	61 01       	movw	r12, r2
    12f8:	01 e0       	ldi	r16, 0x01	; 1
    12fa:	10 e0       	ldi	r17, 0x00	; 0
    12fc:	12 c0       	rjmp	.+36     	; 0x1322 <vfprintf+0x160>
    12fe:	f5 01       	movw	r30, r10
    1300:	c0 80       	ld	r12, Z
    1302:	d1 80       	ldd	r13, Z+1	; 0x01
    1304:	f6 fc       	sbrc	r15, 6
    1306:	03 c0       	rjmp	.+6      	; 0x130e <vfprintf+0x14c>
    1308:	6f ef       	ldi	r22, 0xFF	; 255
    130a:	7f ef       	ldi	r23, 0xFF	; 255
    130c:	02 c0       	rjmp	.+4      	; 0x1312 <vfprintf+0x150>
    130e:	69 2d       	mov	r22, r9
    1310:	70 e0       	ldi	r23, 0x00	; 0
    1312:	42 e0       	ldi	r20, 0x02	; 2
    1314:	50 e0       	ldi	r21, 0x00	; 0
    1316:	a4 0e       	add	r10, r20
    1318:	b5 1e       	adc	r11, r21
    131a:	c6 01       	movw	r24, r12
    131c:	0e 94 c9 0a 	call	0x1592	; 0x1592 <strnlen>
    1320:	8c 01       	movw	r16, r24
    1322:	5f e7       	ldi	r21, 0x7F	; 127
    1324:	f5 22       	and	r15, r21
    1326:	14 c0       	rjmp	.+40     	; 0x1350 <vfprintf+0x18e>
    1328:	f5 01       	movw	r30, r10
    132a:	c0 80       	ld	r12, Z
    132c:	d1 80       	ldd	r13, Z+1	; 0x01
    132e:	f6 fc       	sbrc	r15, 6
    1330:	03 c0       	rjmp	.+6      	; 0x1338 <vfprintf+0x176>
    1332:	6f ef       	ldi	r22, 0xFF	; 255
    1334:	7f ef       	ldi	r23, 0xFF	; 255
    1336:	02 c0       	rjmp	.+4      	; 0x133c <vfprintf+0x17a>
    1338:	69 2d       	mov	r22, r9
    133a:	70 e0       	ldi	r23, 0x00	; 0
    133c:	42 e0       	ldi	r20, 0x02	; 2
    133e:	50 e0       	ldi	r21, 0x00	; 0
    1340:	a4 0e       	add	r10, r20
    1342:	b5 1e       	adc	r11, r21
    1344:	c6 01       	movw	r24, r12
    1346:	0e 94 be 0a 	call	0x157c	; 0x157c <strnlen_P>
    134a:	8c 01       	movw	r16, r24
    134c:	50 e8       	ldi	r21, 0x80	; 128
    134e:	f5 2a       	or	r15, r21
    1350:	f3 fe       	sbrs	r15, 3
    1352:	07 c0       	rjmp	.+14     	; 0x1362 <vfprintf+0x1a0>
    1354:	1a c0       	rjmp	.+52     	; 0x138a <vfprintf+0x1c8>
    1356:	80 e2       	ldi	r24, 0x20	; 32
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	b3 01       	movw	r22, r6
    135c:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <fputc>
    1360:	ea 94       	dec	r14
    1362:	8e 2d       	mov	r24, r14
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	08 17       	cp	r16, r24
    1368:	19 07       	cpc	r17, r25
    136a:	a8 f3       	brcs	.-22     	; 0x1356 <vfprintf+0x194>
    136c:	0e c0       	rjmp	.+28     	; 0x138a <vfprintf+0x1c8>
    136e:	f6 01       	movw	r30, r12
    1370:	f7 fc       	sbrc	r15, 7
    1372:	85 91       	lpm	r24, Z+
    1374:	f7 fe       	sbrs	r15, 7
    1376:	81 91       	ld	r24, Z+
    1378:	6f 01       	movw	r12, r30
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	b3 01       	movw	r22, r6
    137e:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <fputc>
    1382:	e1 10       	cpse	r14, r1
    1384:	ea 94       	dec	r14
    1386:	01 50       	subi	r16, 0x01	; 1
    1388:	10 40       	sbci	r17, 0x00	; 0
    138a:	01 15       	cp	r16, r1
    138c:	11 05       	cpc	r17, r1
    138e:	79 f7       	brne	.-34     	; 0x136e <vfprintf+0x1ac>
    1390:	ea c0       	rjmp	.+468    	; 0x1566 <vfprintf+0x3a4>
    1392:	94 36       	cpi	r25, 0x64	; 100
    1394:	11 f0       	breq	.+4      	; 0x139a <vfprintf+0x1d8>
    1396:	99 36       	cpi	r25, 0x69	; 105
    1398:	69 f5       	brne	.+90     	; 0x13f4 <vfprintf+0x232>
    139a:	f7 fe       	sbrs	r15, 7
    139c:	08 c0       	rjmp	.+16     	; 0x13ae <vfprintf+0x1ec>
    139e:	f5 01       	movw	r30, r10
    13a0:	20 81       	ld	r18, Z
    13a2:	31 81       	ldd	r19, Z+1	; 0x01
    13a4:	42 81       	ldd	r20, Z+2	; 0x02
    13a6:	53 81       	ldd	r21, Z+3	; 0x03
    13a8:	84 e0       	ldi	r24, 0x04	; 4
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	0a c0       	rjmp	.+20     	; 0x13c2 <vfprintf+0x200>
    13ae:	f5 01       	movw	r30, r10
    13b0:	80 81       	ld	r24, Z
    13b2:	91 81       	ldd	r25, Z+1	; 0x01
    13b4:	9c 01       	movw	r18, r24
    13b6:	44 27       	eor	r20, r20
    13b8:	37 fd       	sbrc	r19, 7
    13ba:	40 95       	com	r20
    13bc:	54 2f       	mov	r21, r20
    13be:	82 e0       	ldi	r24, 0x02	; 2
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	a8 0e       	add	r10, r24
    13c4:	b9 1e       	adc	r11, r25
    13c6:	9f e6       	ldi	r25, 0x6F	; 111
    13c8:	f9 22       	and	r15, r25
    13ca:	57 ff       	sbrs	r21, 7
    13cc:	09 c0       	rjmp	.+18     	; 0x13e0 <vfprintf+0x21e>
    13ce:	50 95       	com	r21
    13d0:	40 95       	com	r20
    13d2:	30 95       	com	r19
    13d4:	21 95       	neg	r18
    13d6:	3f 4f       	sbci	r19, 0xFF	; 255
    13d8:	4f 4f       	sbci	r20, 0xFF	; 255
    13da:	5f 4f       	sbci	r21, 0xFF	; 255
    13dc:	e0 e8       	ldi	r30, 0x80	; 128
    13de:	fe 2a       	or	r15, r30
    13e0:	ca 01       	movw	r24, r20
    13e2:	b9 01       	movw	r22, r18
    13e4:	a1 01       	movw	r20, r2
    13e6:	2a e0       	ldi	r18, 0x0A	; 10
    13e8:	30 e0       	ldi	r19, 0x00	; 0
    13ea:	0e 94 00 0b 	call	0x1600	; 0x1600 <__ultoa_invert>
    13ee:	d8 2e       	mov	r13, r24
    13f0:	d2 18       	sub	r13, r2
    13f2:	40 c0       	rjmp	.+128    	; 0x1474 <vfprintf+0x2b2>
    13f4:	95 37       	cpi	r25, 0x75	; 117
    13f6:	29 f4       	brne	.+10     	; 0x1402 <vfprintf+0x240>
    13f8:	1f 2d       	mov	r17, r15
    13fa:	1f 7e       	andi	r17, 0xEF	; 239
    13fc:	2a e0       	ldi	r18, 0x0A	; 10
    13fe:	30 e0       	ldi	r19, 0x00	; 0
    1400:	1d c0       	rjmp	.+58     	; 0x143c <vfprintf+0x27a>
    1402:	1f 2d       	mov	r17, r15
    1404:	19 7f       	andi	r17, 0xF9	; 249
    1406:	9f 36       	cpi	r25, 0x6F	; 111
    1408:	61 f0       	breq	.+24     	; 0x1422 <vfprintf+0x260>
    140a:	90 37       	cpi	r25, 0x70	; 112
    140c:	20 f4       	brcc	.+8      	; 0x1416 <vfprintf+0x254>
    140e:	98 35       	cpi	r25, 0x58	; 88
    1410:	09 f0       	breq	.+2      	; 0x1414 <vfprintf+0x252>
    1412:	ac c0       	rjmp	.+344    	; 0x156c <vfprintf+0x3aa>
    1414:	0f c0       	rjmp	.+30     	; 0x1434 <vfprintf+0x272>
    1416:	90 37       	cpi	r25, 0x70	; 112
    1418:	39 f0       	breq	.+14     	; 0x1428 <vfprintf+0x266>
    141a:	98 37       	cpi	r25, 0x78	; 120
    141c:	09 f0       	breq	.+2      	; 0x1420 <vfprintf+0x25e>
    141e:	a6 c0       	rjmp	.+332    	; 0x156c <vfprintf+0x3aa>
    1420:	04 c0       	rjmp	.+8      	; 0x142a <vfprintf+0x268>
    1422:	28 e0       	ldi	r18, 0x08	; 8
    1424:	30 e0       	ldi	r19, 0x00	; 0
    1426:	0a c0       	rjmp	.+20     	; 0x143c <vfprintf+0x27a>
    1428:	10 61       	ori	r17, 0x10	; 16
    142a:	14 fd       	sbrc	r17, 4
    142c:	14 60       	ori	r17, 0x04	; 4
    142e:	20 e1       	ldi	r18, 0x10	; 16
    1430:	30 e0       	ldi	r19, 0x00	; 0
    1432:	04 c0       	rjmp	.+8      	; 0x143c <vfprintf+0x27a>
    1434:	14 fd       	sbrc	r17, 4
    1436:	16 60       	ori	r17, 0x06	; 6
    1438:	20 e1       	ldi	r18, 0x10	; 16
    143a:	32 e0       	ldi	r19, 0x02	; 2
    143c:	17 ff       	sbrs	r17, 7
    143e:	08 c0       	rjmp	.+16     	; 0x1450 <vfprintf+0x28e>
    1440:	f5 01       	movw	r30, r10
    1442:	60 81       	ld	r22, Z
    1444:	71 81       	ldd	r23, Z+1	; 0x01
    1446:	82 81       	ldd	r24, Z+2	; 0x02
    1448:	93 81       	ldd	r25, Z+3	; 0x03
    144a:	44 e0       	ldi	r20, 0x04	; 4
    144c:	50 e0       	ldi	r21, 0x00	; 0
    144e:	08 c0       	rjmp	.+16     	; 0x1460 <vfprintf+0x29e>
    1450:	f5 01       	movw	r30, r10
    1452:	80 81       	ld	r24, Z
    1454:	91 81       	ldd	r25, Z+1	; 0x01
    1456:	bc 01       	movw	r22, r24
    1458:	80 e0       	ldi	r24, 0x00	; 0
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	42 e0       	ldi	r20, 0x02	; 2
    145e:	50 e0       	ldi	r21, 0x00	; 0
    1460:	a4 0e       	add	r10, r20
    1462:	b5 1e       	adc	r11, r21
    1464:	a1 01       	movw	r20, r2
    1466:	0e 94 00 0b 	call	0x1600	; 0x1600 <__ultoa_invert>
    146a:	d8 2e       	mov	r13, r24
    146c:	d2 18       	sub	r13, r2
    146e:	8f e7       	ldi	r24, 0x7F	; 127
    1470:	f8 2e       	mov	r15, r24
    1472:	f1 22       	and	r15, r17
    1474:	f6 fe       	sbrs	r15, 6
    1476:	0b c0       	rjmp	.+22     	; 0x148e <vfprintf+0x2cc>
    1478:	5e ef       	ldi	r21, 0xFE	; 254
    147a:	f5 22       	and	r15, r21
    147c:	d9 14       	cp	r13, r9
    147e:	38 f4       	brcc	.+14     	; 0x148e <vfprintf+0x2cc>
    1480:	f4 fe       	sbrs	r15, 4
    1482:	07 c0       	rjmp	.+14     	; 0x1492 <vfprintf+0x2d0>
    1484:	f2 fc       	sbrc	r15, 2
    1486:	05 c0       	rjmp	.+10     	; 0x1492 <vfprintf+0x2d0>
    1488:	8f ee       	ldi	r24, 0xEF	; 239
    148a:	f8 22       	and	r15, r24
    148c:	02 c0       	rjmp	.+4      	; 0x1492 <vfprintf+0x2d0>
    148e:	1d 2d       	mov	r17, r13
    1490:	01 c0       	rjmp	.+2      	; 0x1494 <vfprintf+0x2d2>
    1492:	19 2d       	mov	r17, r9
    1494:	f4 fe       	sbrs	r15, 4
    1496:	0d c0       	rjmp	.+26     	; 0x14b2 <vfprintf+0x2f0>
    1498:	fe 01       	movw	r30, r28
    149a:	ed 0d       	add	r30, r13
    149c:	f1 1d       	adc	r31, r1
    149e:	80 81       	ld	r24, Z
    14a0:	80 33       	cpi	r24, 0x30	; 48
    14a2:	19 f4       	brne	.+6      	; 0x14aa <vfprintf+0x2e8>
    14a4:	99 ee       	ldi	r25, 0xE9	; 233
    14a6:	f9 22       	and	r15, r25
    14a8:	08 c0       	rjmp	.+16     	; 0x14ba <vfprintf+0x2f8>
    14aa:	1f 5f       	subi	r17, 0xFF	; 255
    14ac:	f2 fe       	sbrs	r15, 2
    14ae:	05 c0       	rjmp	.+10     	; 0x14ba <vfprintf+0x2f8>
    14b0:	03 c0       	rjmp	.+6      	; 0x14b8 <vfprintf+0x2f6>
    14b2:	8f 2d       	mov	r24, r15
    14b4:	86 78       	andi	r24, 0x86	; 134
    14b6:	09 f0       	breq	.+2      	; 0x14ba <vfprintf+0x2f8>
    14b8:	1f 5f       	subi	r17, 0xFF	; 255
    14ba:	0f 2d       	mov	r16, r15
    14bc:	f3 fc       	sbrc	r15, 3
    14be:	14 c0       	rjmp	.+40     	; 0x14e8 <vfprintf+0x326>
    14c0:	f0 fe       	sbrs	r15, 0
    14c2:	0f c0       	rjmp	.+30     	; 0x14e2 <vfprintf+0x320>
    14c4:	1e 15       	cp	r17, r14
    14c6:	10 f0       	brcs	.+4      	; 0x14cc <vfprintf+0x30a>
    14c8:	9d 2c       	mov	r9, r13
    14ca:	0b c0       	rjmp	.+22     	; 0x14e2 <vfprintf+0x320>
    14cc:	9d 2c       	mov	r9, r13
    14ce:	9e 0c       	add	r9, r14
    14d0:	91 1a       	sub	r9, r17
    14d2:	1e 2d       	mov	r17, r14
    14d4:	06 c0       	rjmp	.+12     	; 0x14e2 <vfprintf+0x320>
    14d6:	80 e2       	ldi	r24, 0x20	; 32
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	b3 01       	movw	r22, r6
    14dc:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <fputc>
    14e0:	1f 5f       	subi	r17, 0xFF	; 255
    14e2:	1e 15       	cp	r17, r14
    14e4:	c0 f3       	brcs	.-16     	; 0x14d6 <vfprintf+0x314>
    14e6:	04 c0       	rjmp	.+8      	; 0x14f0 <vfprintf+0x32e>
    14e8:	1e 15       	cp	r17, r14
    14ea:	10 f4       	brcc	.+4      	; 0x14f0 <vfprintf+0x32e>
    14ec:	e1 1a       	sub	r14, r17
    14ee:	01 c0       	rjmp	.+2      	; 0x14f2 <vfprintf+0x330>
    14f0:	ee 24       	eor	r14, r14
    14f2:	04 ff       	sbrs	r16, 4
    14f4:	0f c0       	rjmp	.+30     	; 0x1514 <vfprintf+0x352>
    14f6:	80 e3       	ldi	r24, 0x30	; 48
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	b3 01       	movw	r22, r6
    14fc:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <fputc>
    1500:	02 ff       	sbrs	r16, 2
    1502:	1d c0       	rjmp	.+58     	; 0x153e <vfprintf+0x37c>
    1504:	01 fd       	sbrc	r16, 1
    1506:	03 c0       	rjmp	.+6      	; 0x150e <vfprintf+0x34c>
    1508:	88 e7       	ldi	r24, 0x78	; 120
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	0e c0       	rjmp	.+28     	; 0x152a <vfprintf+0x368>
    150e:	88 e5       	ldi	r24, 0x58	; 88
    1510:	90 e0       	ldi	r25, 0x00	; 0
    1512:	0b c0       	rjmp	.+22     	; 0x152a <vfprintf+0x368>
    1514:	80 2f       	mov	r24, r16
    1516:	86 78       	andi	r24, 0x86	; 134
    1518:	91 f0       	breq	.+36     	; 0x153e <vfprintf+0x37c>
    151a:	01 ff       	sbrs	r16, 1
    151c:	02 c0       	rjmp	.+4      	; 0x1522 <vfprintf+0x360>
    151e:	8b e2       	ldi	r24, 0x2B	; 43
    1520:	01 c0       	rjmp	.+2      	; 0x1524 <vfprintf+0x362>
    1522:	80 e2       	ldi	r24, 0x20	; 32
    1524:	f7 fc       	sbrc	r15, 7
    1526:	8d e2       	ldi	r24, 0x2D	; 45
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	b3 01       	movw	r22, r6
    152c:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <fputc>
    1530:	06 c0       	rjmp	.+12     	; 0x153e <vfprintf+0x37c>
    1532:	80 e3       	ldi	r24, 0x30	; 48
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	b3 01       	movw	r22, r6
    1538:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <fputc>
    153c:	9a 94       	dec	r9
    153e:	d9 14       	cp	r13, r9
    1540:	c0 f3       	brcs	.-16     	; 0x1532 <vfprintf+0x370>
    1542:	da 94       	dec	r13
    1544:	f1 01       	movw	r30, r2
    1546:	ed 0d       	add	r30, r13
    1548:	f1 1d       	adc	r31, r1
    154a:	80 81       	ld	r24, Z
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	b3 01       	movw	r22, r6
    1550:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <fputc>
    1554:	dd 20       	and	r13, r13
    1556:	a9 f7       	brne	.-22     	; 0x1542 <vfprintf+0x380>
    1558:	06 c0       	rjmp	.+12     	; 0x1566 <vfprintf+0x3a4>
    155a:	80 e2       	ldi	r24, 0x20	; 32
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	b3 01       	movw	r22, r6
    1560:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <fputc>
    1564:	ea 94       	dec	r14
    1566:	ee 20       	and	r14, r14
    1568:	c1 f7       	brne	.-16     	; 0x155a <vfprintf+0x398>
    156a:	43 ce       	rjmp	.-890    	; 0x11f2 <vfprintf+0x30>
    156c:	f3 01       	movw	r30, r6
    156e:	66 81       	ldd	r22, Z+6	; 0x06
    1570:	77 81       	ldd	r23, Z+7	; 0x07
    1572:	cb 01       	movw	r24, r22
    1574:	2b 96       	adiw	r28, 0x0b	; 11
    1576:	e2 e1       	ldi	r30, 0x12	; 18
    1578:	0c 94 aa 08 	jmp	0x1154	; 0x1154 <__epilogue_restores__>

0000157c <strnlen_P>:
    157c:	fc 01       	movw	r30, r24
    157e:	05 90       	lpm	r0, Z+
    1580:	61 50       	subi	r22, 0x01	; 1
    1582:	70 40       	sbci	r23, 0x00	; 0
    1584:	01 10       	cpse	r0, r1
    1586:	d8 f7       	brcc	.-10     	; 0x157e <strnlen_P+0x2>
    1588:	80 95       	com	r24
    158a:	90 95       	com	r25
    158c:	8e 0f       	add	r24, r30
    158e:	9f 1f       	adc	r25, r31
    1590:	08 95       	ret

00001592 <strnlen>:
    1592:	fc 01       	movw	r30, r24
    1594:	61 50       	subi	r22, 0x01	; 1
    1596:	70 40       	sbci	r23, 0x00	; 0
    1598:	01 90       	ld	r0, Z+
    159a:	01 10       	cpse	r0, r1
    159c:	d8 f7       	brcc	.-10     	; 0x1594 <strnlen+0x2>
    159e:	80 95       	com	r24
    15a0:	90 95       	com	r25
    15a2:	8e 0f       	add	r24, r30
    15a4:	9f 1f       	adc	r25, r31
    15a6:	08 95       	ret

000015a8 <fputc>:
    15a8:	0f 93       	push	r16
    15aa:	1f 93       	push	r17
    15ac:	cf 93       	push	r28
    15ae:	df 93       	push	r29
    15b0:	8c 01       	movw	r16, r24
    15b2:	eb 01       	movw	r28, r22
    15b4:	8b 81       	ldd	r24, Y+3	; 0x03
    15b6:	81 ff       	sbrs	r24, 1
    15b8:	1b c0       	rjmp	.+54     	; 0x15f0 <fputc+0x48>
    15ba:	82 ff       	sbrs	r24, 2
    15bc:	0d c0       	rjmp	.+26     	; 0x15d8 <fputc+0x30>
    15be:	2e 81       	ldd	r18, Y+6	; 0x06
    15c0:	3f 81       	ldd	r19, Y+7	; 0x07
    15c2:	8c 81       	ldd	r24, Y+4	; 0x04
    15c4:	9d 81       	ldd	r25, Y+5	; 0x05
    15c6:	28 17       	cp	r18, r24
    15c8:	39 07       	cpc	r19, r25
    15ca:	64 f4       	brge	.+24     	; 0x15e4 <fputc+0x3c>
    15cc:	e8 81       	ld	r30, Y
    15ce:	f9 81       	ldd	r31, Y+1	; 0x01
    15d0:	01 93       	st	Z+, r16
    15d2:	f9 83       	std	Y+1, r31	; 0x01
    15d4:	e8 83       	st	Y, r30
    15d6:	06 c0       	rjmp	.+12     	; 0x15e4 <fputc+0x3c>
    15d8:	e8 85       	ldd	r30, Y+8	; 0x08
    15da:	f9 85       	ldd	r31, Y+9	; 0x09
    15dc:	80 2f       	mov	r24, r16
    15de:	09 95       	icall
    15e0:	89 2b       	or	r24, r25
    15e2:	31 f4       	brne	.+12     	; 0x15f0 <fputc+0x48>
    15e4:	8e 81       	ldd	r24, Y+6	; 0x06
    15e6:	9f 81       	ldd	r25, Y+7	; 0x07
    15e8:	01 96       	adiw	r24, 0x01	; 1
    15ea:	9f 83       	std	Y+7, r25	; 0x07
    15ec:	8e 83       	std	Y+6, r24	; 0x06
    15ee:	02 c0       	rjmp	.+4      	; 0x15f4 <fputc+0x4c>
    15f0:	0f ef       	ldi	r16, 0xFF	; 255
    15f2:	1f ef       	ldi	r17, 0xFF	; 255
    15f4:	c8 01       	movw	r24, r16
    15f6:	df 91       	pop	r29
    15f8:	cf 91       	pop	r28
    15fa:	1f 91       	pop	r17
    15fc:	0f 91       	pop	r16
    15fe:	08 95       	ret

00001600 <__ultoa_invert>:
    1600:	fa 01       	movw	r30, r20
    1602:	aa 27       	eor	r26, r26
    1604:	28 30       	cpi	r18, 0x08	; 8
    1606:	51 f1       	breq	.+84     	; 0x165c <__ultoa_invert+0x5c>
    1608:	20 31       	cpi	r18, 0x10	; 16
    160a:	81 f1       	breq	.+96     	; 0x166c <__ultoa_invert+0x6c>
    160c:	e8 94       	clt
    160e:	6f 93       	push	r22
    1610:	6e 7f       	andi	r22, 0xFE	; 254
    1612:	6e 5f       	subi	r22, 0xFE	; 254
    1614:	7f 4f       	sbci	r23, 0xFF	; 255
    1616:	8f 4f       	sbci	r24, 0xFF	; 255
    1618:	9f 4f       	sbci	r25, 0xFF	; 255
    161a:	af 4f       	sbci	r26, 0xFF	; 255
    161c:	b1 e0       	ldi	r27, 0x01	; 1
    161e:	3e d0       	rcall	.+124    	; 0x169c <__ultoa_invert+0x9c>
    1620:	b4 e0       	ldi	r27, 0x04	; 4
    1622:	3c d0       	rcall	.+120    	; 0x169c <__ultoa_invert+0x9c>
    1624:	67 0f       	add	r22, r23
    1626:	78 1f       	adc	r23, r24
    1628:	89 1f       	adc	r24, r25
    162a:	9a 1f       	adc	r25, r26
    162c:	a1 1d       	adc	r26, r1
    162e:	68 0f       	add	r22, r24
    1630:	79 1f       	adc	r23, r25
    1632:	8a 1f       	adc	r24, r26
    1634:	91 1d       	adc	r25, r1
    1636:	a1 1d       	adc	r26, r1
    1638:	6a 0f       	add	r22, r26
    163a:	71 1d       	adc	r23, r1
    163c:	81 1d       	adc	r24, r1
    163e:	91 1d       	adc	r25, r1
    1640:	a1 1d       	adc	r26, r1
    1642:	20 d0       	rcall	.+64     	; 0x1684 <__ultoa_invert+0x84>
    1644:	09 f4       	brne	.+2      	; 0x1648 <__ultoa_invert+0x48>
    1646:	68 94       	set
    1648:	3f 91       	pop	r19
    164a:	2a e0       	ldi	r18, 0x0A	; 10
    164c:	26 9f       	mul	r18, r22
    164e:	11 24       	eor	r1, r1
    1650:	30 19       	sub	r19, r0
    1652:	30 5d       	subi	r19, 0xD0	; 208
    1654:	31 93       	st	Z+, r19
    1656:	de f6       	brtc	.-74     	; 0x160e <__ultoa_invert+0xe>
    1658:	cf 01       	movw	r24, r30
    165a:	08 95       	ret
    165c:	46 2f       	mov	r20, r22
    165e:	47 70       	andi	r20, 0x07	; 7
    1660:	40 5d       	subi	r20, 0xD0	; 208
    1662:	41 93       	st	Z+, r20
    1664:	b3 e0       	ldi	r27, 0x03	; 3
    1666:	0f d0       	rcall	.+30     	; 0x1686 <__ultoa_invert+0x86>
    1668:	c9 f7       	brne	.-14     	; 0x165c <__ultoa_invert+0x5c>
    166a:	f6 cf       	rjmp	.-20     	; 0x1658 <__ultoa_invert+0x58>
    166c:	46 2f       	mov	r20, r22
    166e:	4f 70       	andi	r20, 0x0F	; 15
    1670:	40 5d       	subi	r20, 0xD0	; 208
    1672:	4a 33       	cpi	r20, 0x3A	; 58
    1674:	18 f0       	brcs	.+6      	; 0x167c <__ultoa_invert+0x7c>
    1676:	49 5d       	subi	r20, 0xD9	; 217
    1678:	31 fd       	sbrc	r19, 1
    167a:	40 52       	subi	r20, 0x20	; 32
    167c:	41 93       	st	Z+, r20
    167e:	02 d0       	rcall	.+4      	; 0x1684 <__ultoa_invert+0x84>
    1680:	a9 f7       	brne	.-22     	; 0x166c <__ultoa_invert+0x6c>
    1682:	ea cf       	rjmp	.-44     	; 0x1658 <__ultoa_invert+0x58>
    1684:	b4 e0       	ldi	r27, 0x04	; 4
    1686:	a6 95       	lsr	r26
    1688:	97 95       	ror	r25
    168a:	87 95       	ror	r24
    168c:	77 95       	ror	r23
    168e:	67 95       	ror	r22
    1690:	ba 95       	dec	r27
    1692:	c9 f7       	brne	.-14     	; 0x1686 <__ultoa_invert+0x86>
    1694:	00 97       	sbiw	r24, 0x00	; 0
    1696:	61 05       	cpc	r22, r1
    1698:	71 05       	cpc	r23, r1
    169a:	08 95       	ret
    169c:	9b 01       	movw	r18, r22
    169e:	ac 01       	movw	r20, r24
    16a0:	0a 2e       	mov	r0, r26
    16a2:	06 94       	lsr	r0
    16a4:	57 95       	ror	r21
    16a6:	47 95       	ror	r20
    16a8:	37 95       	ror	r19
    16aa:	27 95       	ror	r18
    16ac:	ba 95       	dec	r27
    16ae:	c9 f7       	brne	.-14     	; 0x16a2 <__ultoa_invert+0xa2>
    16b0:	62 0f       	add	r22, r18
    16b2:	73 1f       	adc	r23, r19
    16b4:	84 1f       	adc	r24, r20
    16b6:	95 1f       	adc	r25, r21
    16b8:	a0 1d       	adc	r26, r0
    16ba:	08 95       	ret

000016bc <_exit>:
    16bc:	f8 94       	cli

000016be <__stop_program>:
    16be:	ff cf       	rjmp	.-2      	; 0x16be <__stop_program>
